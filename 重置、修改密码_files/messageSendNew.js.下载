define(['Util','js/knowledge/dialog',
        'text!modules/knowledgeAppNew/messageSend.tpl',
        'js/constants/constants',
        'js/personalCenter/MyAlert',
        'select', 'dialog', 'js/constants/kmUtil', 'crossAPI', 'text!modules/personalCenterNew/sendResult.tpl', 'text!modules/knowledgeAppNew/authMsgForDetailTpl.tpl','js/btnAuthority','text!modules/knowledgeAppNew/messageSendNew.tpl'],
    function (Util,dialogNew, tpl, Constants, myAlert, select, Dialog, KmUtil, CrossAPI, sendResult, authMsgTpl,btnAuthority,tplNew) {

        var klg_Id;
        var klg_Nm;
        var ver_no;
        var glbRegionId = "";//地市id
        var klg_group = [];
        var regionMap = [{'regionId': 'moren', 'regionName': '默认'}];
        var knwlgMap = [];
        var isHall = false;
        var regionSelect;
        var defaultModel = false;
        var hasDefault = false;
        var isChange = false;
        var closeCallBack;
        var knlgCntt = {};
        var once = true;
        var isKnlgChange = false;
        var klgIdArr = [];
        var klgNmArr = [];
        var msgCnttArr = [];
        var msgCntt = {};
        var knwlgIdArray = [];
        var klgNmArray = [];
        var ifDefault = {};
        var dialog;
        var atomIds = [];
        var isDisplay = false;
        //授权短信用参数
        var atomIdArray = [];
        var smsTitleArray = [];
        var msgIdArray = [];
        var relateIds = []; // 0412 Added by lizh23
        var checkTab = false;
        var smsIdNow;
        var rootURL = window.location.protocol + "//" + window.location.host + "/ngkm/kmMessageDetatil";
        var klgIndex=0;
        var serialNum;
        var phoneNumber;
        //当前选中的原子id的集合
        var selectAtomIds;

        var userProvInfo;
        var templtId;
        var modeCheck = false;
        var customModel = 0;
        var contactId;
        var openMode = window.localStorage.getItem("openMode");
        var point;
        //gis参数
        var gisParam=[];
        var navUrl="";
        var dialogContent ;
        var smsSuffixState ;
        var detailFlag = false;
        var tmpltId;
        var isNetwork = "1";
        var isForceSend="0";
        var bizSerialNo;
        var knowledge_Id;
        // var phoneArea;//号码归属
        var sensorMsgClickTimeStart;
        var sensorSendMsgPage;
        var smsMo;
        var klgAttrId = "";
        var num = 0;
        var nameSpan = 0;
        var isDom = true;
        var isInit = true;
        var showFlag = true;
        var atomNames;
        var recId="";
        var groupsuffix = ['办理','开通','激活','变更','取消'];
        var atomNms = ['可领取权益说明','权益方（app）','权益分类','权益领取方式','权益领取方式1','权益领取方式2','权益领取方式3','权益领取方式4','权益领取方式5','权益领取方式6','权益领取方式7','权益领取方式8','权益领取方式9','权益领取方式10'];
        var tmpltIds = ['58','63','180409165332000002'];
        //var filterList = ["【开通方式-短信","【开通方式-微信","【开通方式-其他渠道","【开通方式-其它渠道","【开通方式-H5","【开通-自助办理","【变更方式-短信","【变更方式-微信","【变更方式-其他渠道","【变更方式-其它渠道","【变更方式-H5","【取消方式-短信","【取消方式-微信","【取消方式-其他渠道","【取消方式-其它渠道","【取消方式-H5","【手机设置","【视频介绍","【权益领取方式","【答案"]
        var filterSmsContent = function (smsContent) {
            //去除短信原子名称1，2，3...后缀
            do{
                var regExpFilter = "[0-9]{1,}】";
                regResult = smsContent.match(regExpFilter);
                if(regResult){
                    var regResultStr = regResult[0];
                    smsContent =  smsContent.replace(regResultStr,"】");
                }
            }while (regResult);
            do{
                var regH5ExpFilter = "[-H]{1,}】";
                var regResult = smsContent.match(regH5ExpFilter);
                if (regResult) {
                    var regH5ResultStr = regResult[0];
                    smsContent =  smsContent.replace(regH5ResultStr,"-H5】");
                }
            }while (regResult);
            return smsContent;
        }
        var filterSmsContents = function (smsContent) {
            if(atomNames != '' && atomNames != null){
                var atomNameArray = atomNames.split(",");
                if (atomNameArray.length > -1) {
                    for (var i = 0; i < atomNameArray.length; i++) {
                        var atomName = atomNameArray[i];
                        var atomNameAfter = '';
                        if(smsContent.indexOf(atomName) != -1){
                            //去除短信原子名称1，2，3...后缀
                            var regExpFilter = "[0-9]{1,}$";
                            var regResult = atomName.match(regExpFilter);
                            if(regResult){
                                var regResultStr = regResult[0];
                                atomNameAfter = atomName.replace(regResultStr,"");
                            }
                            var regH5ExpFilter = "[-H]{1,}$";
                            var regResult = atomNameAfter.match(regH5ExpFilter);
                            if (regResult) {
                                var regH5ResultStr = regResult[0];
                                atomNameAfter = atomNameAfter.replace(regH5ResultStr,"-H5");
                            }
                            //替换掉处理过的原子名称
                            smsContent = smsContent.replace(atomName,atomNameAfter);
                        }
                    }
                }
            }
            return smsContent;
        }

        // <editor-fold desc="前端埋点神策 SDK 初始化">
        var sensorsDataInit = function() {
            var env = Constants.getEnvment();
            var receiveUrl = 'http://sensors.ipaas.cmos/sa?project=production';
            if (Constants.NGKM_ENVIROMENT_DEV == env) {
                receiveUrl = Constants.getSensorsTestEnvReceiveUrl();
            } else if (Constants.NGKM_ENVIROMENT_TEST == env) {
                receiveUrl = Constants.getSensorsTestEnvReceiveUrl();
            } else {
                var httpType = window.location.protocol;
                if ('https:' == httpType) {
                    receiveUrl = 'https://sensors.ipaas.cmos:20443/sa?project=production';
                }else {
                    receiveUrl = 'http://sensors.ipaas.cmos/sa?project=production';
                }
            }
            (function (para) {
                var p = para.sdk_url, n = para.name, w = window, d = document, s = 'script', x = null, y = null;
                if(typeof(w['sensorsDataAnalytic201505']) !== 'undefined') {
                    return false;
                }
                w['sensorsDataAnalytic201505'] = n;
                w[n] = w[n] || function (a) {
                    return function () {
                        (w[n]._q = w[n]._q || []).push([a, arguments]);
                    }
                };
                var ifs = ['track', 'quick', 'register', 'registerPage', 'registerOnce', 'clearAllRegister', 'trackSignup', 'trackAbtest', 'setProfile', 'setOnceProfile', 'appendProfile', 'incrementProfile', 'deleteProfile', 'unsetProfile', 'identify', 'login', 'logout', 'trackLink', 'clearAllRegister'];
                for (var i = 0; i < ifs.length; i++) {
                    w[n][ifs[i]] = w[n].call(null, ifs[i]);
                }
                if (!w[n]._t) {
                    x = d.createElement(s), y = d.getElementsByTagName(s)[0];
                    x.async = 1;
                    x.src = p;

                    w[n].para = para;
                    y.parentNode.insertBefore(x, y);
                }
            })({
                sdk_url: url_prefix+'/js/sensorsdata.min.js',
                name: 'sensorsdata',
                // server_url: 'http://172.22.243.150:8107/index.html?project=production'//神策数据接收地址
                server_url: receiveUrl,//神策数据接收地址
                heatmap_url: url_prefix+"/js/heatmap.min.js",
                heatmap:{
                    clickmap:'default',
                    scroll_notice_map:'default',
                    collect_elements:"all"
                }
            });

            if(sensorsdata){
                Util.ajax.getJson(Constants.AJAXURL + '/user/session' + "?t=" + new Date().getTime(), {}, function (data, state) {
                    if (state) {
                        if (data && data.bean) {
                            //神策用户关联的方法，其中 user_id 为用户的真实 id，字符串或者数值类型都可以。
                            sensorsdata.identify(data.bean.staffCode,true);
                            //<editor-fold desc="神策要求添加的公共属性">
                            var call_id = "";
                            var call_mobile = "";
                            var dispose_mobile = "";
                            var belong_city = "";
                            var is_call = false;
                            if (KmUtil.getUrlParamter("openMode")) {
                                var openMode =  KmUtil.getUrlParamter("openMode");
                                KmUtil.setOpenMode(openMode);
                            }
                            var openMode = window.localStorage.getItem("openMode");
                            if ("2" == openMode && CrossAPI.url != undefined) {
                                CrossAPI.getContact("getCallingInfo",Constants.PARAMJSONCALL, function (CallingInfo) {
                                    if(CallingInfo){

                                        call_id = CallingInfo.callId ? CallingInfo.callId : "";
                                        call_mobile = CallingInfo.callerNo ? CallingInfo.callerNo : "";
                                        dispose_mobile = CallingInfo.subsNumber ? CallingInfo.subsNumber : "";
                                        is_call = true;
                                        belong_city = CallingInfo.destProvId ? CallingInfo.destProvId : "";
                                    }else{
                                        is_call = false;
                                    }
                                });
                            }
                            //</editor-fold>
                            sensorsdata.registerPage({
                                staff_id: data.bean.staffCode,
                                staff_name: data.bean.staffName,
                                provnce: data.bean.provnce,
                                serviceTypeId: data.bean.ngmttServicetype,
                                first_model: "知识库",
                                login_system: "知识库系统", // 登录的业务系统
                                call_id: call_id,
                                call_mobile: call_mobile,
                                dispose_mobile: dispose_mobile,
                                belong_city: belong_city,
                                is_call: is_call
                            });
                            sensorsdata.setProfile({
                                staff_id: data.bean.staffCode,
                                staff_name: data.bean.staffName,
                                provnce: data.bean.provnce,
                                serviceTypeId:data.bean.ngmttServicetype,
                                login_system: "知识库系统" // 登录的业务系统
                            });
                            sensorsdata.quick("autoTrack");
                        }
                    }
                })
            }
        };
        //</editor-fold>

        // <editor-fold desc="detailMsgButtonClickTime">
        function detailMsgButtonClickTime(clickTime,currentPage,mo) {
            sensorMsgClickTimeStart = clickTime;
            sensorSendMsgPage = currentPage;
            smsMo = mo;
        }
        // </editor-fold>

        //导航链接生成
        function buildShortUrl(param) {
            gisParam=param;

        }

        function batchGISParm() {
            var points=[];
            for(var g=0;g<gisParam.length;g++){
                if(gisParam[g].bMLng!=""&&gisParam[g].bMLat!=""){
                    points[points.length]= gisParam[g].bMLng + "," + gisParam[g].bMLat;
                }
            }
            var opts = {
                points: points.join("|"),
                callback: function (results) {
                    if(results){
                        var locations = results.split(";");
                        for(var k=0;k<locations.length;k++){
                            var arr = locations[k].split(",");
                            var gisAddr=points[k].toString().split(",");
                            console.info("web版:" + points[k] + "转换结果:[" + locations[k] + "]");
                            for(var i=0;i<gisParam.length;i++){
                                if(gisParam[i].bMLng!=""&&gisParam[i].bMLng==gisAddr[0]){
                                    gisParam[i].gMLng=arr[0];
                                    gisParam[i].gMLat=arr[1];
                                }
                            }
                        }

                    }
                }
            };
            if(point){
                point.convertor(opts);
            }
        }
        var indexOf = function(arr, args){
            if(!arr){
                return -1;
            }
            for(var i = 0; i < arr.length; i ++){
                if(arr[i] == args){
                    return i;
                }
            }
            return -1;
        };

        function setPoint(mapPoint) {
            point=mapPoint;
        }

        function resetGisParam(param) {
            gisParam=param;
        }
        /**
         * 获取用户来电信息并执行相关回调
         * @param succCallbk 成功回调
         * @param errCallbk 失败回调 无则传 null
         * @param finallyCallbk 最后总是执行的回调
         */
        var getClentPhoneInfo = function (succCallbk, errCallbk, finallyCallbk) {
            var openMode = KmUtil.getOpenMode() || "1";
            if ("2" == openMode && CrossAPI.url != undefined) {//内嵌,且可以获取到url时从左侧客户信息栏获取
                CrossAPI.getContact("getClientBusiInfo", Constants.PARAMJSONBUSINFO, function (clientBusiInfo) {

                    if (clientBusiInfo && clientBusiInfo.bean && clientBusiInfo.bean.msisdn) {
                        succCallbk(clientBusiInfo.bean.msisdn);
                    }
                    if (typeof(finallyCallbk) == "function") {
                        finallyCallbk();
                    }
                });
            } else {//从后台获取
               /* Util.ajax.getJson(Constants.AJAXURL + '/kmClient/getClientInfo' + "?t=" + new Date().getTime(), {}, function (data, state) {
                    if (state) {
                        if (data && data.bean && data.bean.msisdn) {
                            succCallbk(data.bean.msisdn);
                        }
                    } else {
                        if (typeof(errCallbk) == "function") {
                            errCallbk();
                        }
                    }
                    if (typeof(finallyCallbk) == "function") {
                        finallyCallbk();
                    }
                })*/
                var result = localStorage.getItem("ngkm_call");
                if (result) {
                    var phoneNum = result.split("_")[1];
                    succCallbk(phoneNum);
                }else {
                    if (typeof(errCallbk) == "function") {
                        errCallbk();
                    }
                }
                if (typeof(finallyCallbk) == "function") {
                    finallyCallbk();
                }
            }
        };


        var buildTemplate = function () {

            Util.ajax.getJson(Constants.AJAXURL + "/regnTemplateShowConfig/findByTmpltIdGetTemplate?t=" + +new Date().getTime(), { tmpltId: templtId, knwlgId: klg_Id }, function (data) {
                if(data.returnCode == '0'&& data.object != "1"){
                    klg_Nm = '';
                    buildMessage();
                } else {
                    buildMessage();
                }
            });

            var buildMessage = function () {
                var msgTempValue = $("#messageTemplate option:selected").attr("value");
                var messageInfo = $("#messageInfo");
                if (!$("#authorizeMsgSend").parent().hasClass("active")) {
                    $(".list-checkbox").each(function () {
                        var thisObj = $(this);
                        var length = thisObj.children(".tipw-check").length;
                        var count = 0;
                        thisObj.children(".tipw-check").each(function () {
                            if ($(this).hasClass("hide")) {
                                count++;
                            }
                        });
                        if (length == count && !thisObj.hasClass("hide")) {
                            thisObj.addClass("hide");
                        } else if (length > count && thisObj.hasClass("hide")) {
                            thisObj.removeClass("hide");
                        }
                    });
                    if (!knowledge_Id || knowledge_Id == 'undefined' || knowledge_Id !== klg_Id) {
                        knowledge_Id = klg_Id;
                    }
                    //当待发送知识短信为空时,直接返回.
                    if (parseInt($("#msgNum").val()) == 0 || $("#messageLink").val() == "") {
                        var content = "";
                        if (navUrl == "") {
                            content = "暂无预览";

                        } else {
                            var messageLook = msgTempValue.replace('{1}', (klg_Nm == '' ? '' : "【" + klg_Nm + "】"));//待修改
                            content = messageLook.replace('{2}', navUrl);

                        }
                        if (isHall) {
                            if (messageInfo.find("li[klgId=" + knowledge_Id + "]").length > 0) {
                                messageInfo.find("li").removeClass("chked");
                                messageInfo.find("li[klgId=" + knowledge_Id + "]").html(content).addClass("chked");
                            } else {
                                if ((isDom && num == 0) || !isDom) {
                                    messageInfo.find("li").removeClass("chked");
                                    messageLook = '<li klgId = "' + knowledge_Id + '" class="chked">' + content + '</li>';
                                } else {
                                    messageLook = '<li klgId = "' + knowledge_Id + '">' + content + '</li>';
                                }
                                messageInfo.append(messageLook.replace(/&nbsp;/g, " ").replace(/&ensp;/g, " "));
                            }
                        } else {
                            messageInfo.html(content.replace(/&nbsp;/g, " ").replace(/&ensp;/g, " "));
                        }
                        $(".km-popup.loading-box").hide();
                    } else {
                        var messageLink = $("#messageLink").val();
                        // messageLink =  filterSmsContent(messageLink);
                        var messageLook = msgTempValue.replace('{1}', (klg_Nm == '' ? '' : "【" + klg_Nm + "】"));//待修改
                        messageLook = messageLook.replace('{2}', messageLink);
                        if (isHall) {
                            if (messageInfo.find("li[klgId=" + knowledge_Id + "]").length > 0) {
                                messageInfo.find("li").removeClass("chked");
                                messageInfo.find("li[klgId=" + knowledge_Id + "]").html(messageLook).addClass("chked");
                            } else {
                                if ((isDom && num == 0) || !isDom) {
                                    messageInfo.find("li").removeClass("chked");
                                    messageLook = '<li klgId = "' + knowledge_Id + '" class="chked">' + messageLook + '</li>';
                                } else {
                                    messageLook = '<li klgId = "' + knowledge_Id + '" class="">' + messageLook + '</li>';
                                }
                                messageInfo.append(messageLook.replace(/&nbsp;/g, " ").replace(/&ensp;/g, " "));
                            }
                        } else {
                            messageInfo.html(messageLook.replace(/&nbsp;/g, " ").replace(/&ensp;/g, " "));
                        }
                    }

                } else {
                    var messageContent = messageInfo.html();
                    var normalSuffix = $("#messageTemplate option:first").attr("value").split("{2}")[1];
                    var holidaySuffix = $("#messageTemplate option:eq(1)").attr("value").split("{2}")[1];
                    if (messageContent.indexOf(normalSuffix) == -1) {
                        messageContent = messageContent.replace("【中国移动】", normalSuffix);
                        messageInfo.html(messageContent.replace(/&nbsp;/g, " ").replace(/&ensp;/g, " "));
                    }
                    if ($("#messageTemplate option:first").prop("selected") && messageContent.indexOf(holidaySuffix) != -1) {
                        messageContent = messageContent.replace(holidaySuffix, normalSuffix);
                        messageInfo.html(messageContent.replace(/&nbsp;/g, " ").replace(/&ensp;/g, " "));
                    } else if ($("#messageTemplate option:eq(1)").prop("selected") && messageContent.indexOf(holidaySuffix) == -1) {
                        messageContent = messageContent.replace(normalSuffix, holidaySuffix);
                        messageInfo.html(messageContent.replace(/&nbsp;/g, " ").replace(/&ensp;/g, " "));
                    }
                }
                messageInfo.html(filterSmsContents(messageInfo.html().replace(/&nbsp;/g, " ").replace(/&ensp;/g, " ")));
                if (nameSpan == 1) {
                    isDom = false;
                }
                //当加载最后一次时展示选择内容
                if (num == 0 && !isDom) {
                    $("#msgMidDiv").removeClass("hide");
                }
                // 首次加载时，加载选择的全部知识短信内容
                if (isHall && isDom && nameSpan !== 1) {
                    var nameSpanDom = $(".nameSpan");
                    if (nameSpanDom.length == 0) {
                        setTimeout(function () {
                            nameSpanDom = $(".nameSpan")
                            num++;
                            if (isDom && num < nameSpan) {
                                nameSpanDom[num].click();
                            } else if (num == nameSpan) {
                                num = 0;
                                nameSpanDom[0].click();
                                isDom = false;
                                $("#messageInfo").find('li').unbind().click(function () {
                                    var klgid = $(this).attr("klgid");
                                    $("#" + klgid).find(".nameSpan").click();
                                });
                            }
                        }, 200);

                    } else {
                        num++;
                        if (isDom && num < nameSpan) {
                            nameSpanDom[num].click();
                        } else if (num == nameSpan) {
                            num = 0;
                            nameSpanDom[0].click();
                            isDom = false;
                            $("#messageInfo").find('li').unbind().click(function () {
                                var klgid = $(this).attr("klgid");
                                $("#" + klgid).find(".nameSpan").click();
                            });
                        }
                    }

                }
            }
        };



        function refresh() {
            $("#msgPop").show();
            if ($("#messageTemplate option:selected").length == 0) {
                $("#messageTemplate option:first").prop('selected', 'selected');
            }
        }
        //发送短信按钮显示选中原子个数
        function mailNumChange() {
            var msglength;
            if(selectAtomIds){
                msglength = selectAtomIds.length;
            }else{
                msglength = $("#msgPop").find("input[name='check-style']:checked").length;
            }
            $("#msgNum").val(msglength);
            var messageSendTop = $("#messageSendTop");
            var messageSendBottom = $("#messageSendBottom");
            messageSendTop.children("span").remove();
            messageSendBottom.children("span").remove();
            messageSendTop.append($("<span>" + msglength + "</span>"));
            messageSendBottom.append($("<span>" + msglength + "</span>"));
            if (msglength == 0) {
                messageSendTop.children("span").remove();
                messageSendBottom.children("span").remove();
            }
        }
        //修改详情页短信图标
        function changeMessageIcon(attrId, flag) {
            $(".attrData").each(function () {
                var thisObj = $(this);
                if (thisObj.attr("id") == attrId) {
                    flag == "true" ? thisObj.addClass("selected") : thisObj.removeClass("selected");
                    if (thisObj.parents(".left-content").find(".attrData").length === thisObj.parents(".left-content").find(".selected").length) {
                        thisObj.parents(".left-content").find(".allatom").addClass("chked");
                    } else {
                        if (thisObj.parents(".left-content").find(".allatom").hasClass("chked")) {
                            thisObj.parents(".left-content").find(".allatom").removeClass("chked");
                        }
                    }
                }
            });
        }

        //修改服务助手详情页input
        function changeDisplayIcon(attrId, flag) {

            $(".checkbox").each(function () {
                var thisObj = $(this);
                if (thisObj.attr("id") == attrId) {
                    var attrCheck = thisObj.parent().parent().parent().find('input[name="Attr"]');
                    flag == "true" ? attrCheck.prop("checked", false) : attrCheck.attr("value", 1);
                    flag == "false" ? attrCheck.prop("checked", true) : attrCheck.attr("value", 0);
                    var ff = thisObj.parents(".inner-detail").find('input[value="1"]').length;
                    var normal = thisObj.parents(".show-container").find(".normal-tishi");
                    normal.html(ff);
                    if (normal.text() == 0) {
                        if (thisObj.parents(".inner-detail").find('input[name="grpng"]').prop("checked")) {
                            thisObj.parents(".inner-detail").find('input[name="grpng"]').prop("checked", false);
                            thisObj.parents(".inner-detail").find('input[name="grpng"]').attr("value", 0);
                        }
                        normal.addClass("hide");

                    } else {
                        normal.removeClass("hide");
                    }
                }
            });
        }

        var addItem = function(arr, item, addFlag){
            var index = indexOf(arr, item);
            if(addFlag == "true"){
                if(index == -1){
                    arr.push(item);
                }
            }else{
                if(index != -1){
                    arr.splice(index, 1);
                }
            }
        };

        function changeAllItems(attrId, activeFlag) {
            selectAttr(attrId, activeFlag);
            changeMessageIcon(attrId, activeFlag);
            if(selectAtomIds){
                addItem(selectAtomIds, attrId, activeFlag);
            }
            // changeDisplayIcon(attrId, activeFlag);
            mailNumChange();
            if (glbRegionId && !isChange && !checkTab)
                getMessageLink();
        }

        function detailNewBusiness(productCode,id) {
            var thisObj = $('#mes_'+id);
            if(productCode == null || productCode == undefined || productCode =='' ){
                thisObj.siblings("input[regnId=moren]")[0].value = "";
                changeAllItems(thisObj.attr("atomId"), "true");
                changeDisplayIcon(thisObj.attr("atomId"), "false");
            }else{
                var config = {
                    type: 'get',
                    url: Constants.AJAXURL + '/sendSms/getProductPageURLByProductCode',
                    data: {
                        productCode: productCode // 商品ID
                    },
                    dataType: 'json',
                    success: function (data) {
                        if (data.returnCode == '0') {
                            // var productNm = data.object.productName;
                            var productPageURL = data.object.url;
                            bizSerialNo = data.object.seqNo;
                            if(productPageURL){
                                thisObj.siblings("input[regnId=moren]")[0].value = "可根据短信链接自助办理业务：" + productPageURL;
                                changeAllItems(thisObj.attr("atomId"), "true");
                                changeDisplayIcon(thisObj.attr("atomId"), "false");
                            } else {
                                /*new Dialog({
                                    mode: 'tips',
                                    tipsType: 'error',
                                    content: '新电商办理链接获取失败，请重新勾选原子',
                                    height: 20
                                });*/
                                dialogNew.alert({type:'error',message:'新电商办理链接获取失败，请重新勾选原子'});
                                changeAllItems(thisObj.attr("atomId"), "false");
                                changeDisplayIcon(thisObj.attr("atomId"), "true");
                                return false;
                            }
                        } else {
                           /* new Dialog({
                                mode: 'tips',
                                tipsType: 'error',
                                content: data.returnMessage,
                                height: 20
                            });*/
                            dialogNew.alert({type:'error',message:data.returnMessage});

                            changeAllItems(thisObj.attr("atomId"), "false");
                            changeDisplayIcon(thisObj.attr("atomId"), "true");
                            return false;
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        //new MyAlert({'type': 'error', 'text': errorThrown});
                        dialogNew.alert({type:'error',message:errorThrown});
                    }
                };
                Util.ajax.ajax(config);
            }

        }
        //复选框选中/取消状态
        function selectAttr(attrId, flag) {
            var checkBox = $("div.list-checkbox").children("span").find("input[name='check-style']");
            if(checkBox.length == 0 && !selectAtomIds){
                selectAtomIds = [];
            }
            for (var i = checkBox.length - 1; i >= 0; i--) {
                if ($(checkBox[i]).attr("atomId") == attrId) {
                    flag == "true" ? checkBox[i].checked = true : checkBox[i].checked = false;
                    break;
                }
            }
        }

        //获取上一次选中的内容
        var checkLastCntt = function () {
            //预先选中上一次切换前选中的短信
            if (!once && knlgCntt[klg_Id] && knlgCntt[klg_Id].length > 0) {
                for (var i = 0; i < knlgCntt[klg_Id].length; i++) {
                    var checkedInput = $("input[name = 'check-style'][atomId ='" + knlgCntt[klg_Id][i] + "']");
                    if (checkedInput[0].checked === false) {
                        checkedInput.click();
                    }
                }
            }
        };

        //获取短信内容的方法
        function getMessageLink() {
            var hasRich = false;
            var descString = "";
            var klgIdArray = "";
            $("#messageLinkPreview").html("");
            if (isKnlgChange) {
                checkLastCntt();
                isKnlgChange = false;
            }
            var checkBox = $("div.list-checkbox").find('input:checkbox:checked');
            for (var i = 0; i < checkBox.length; i++) {
                var checkBoxItem = $(checkBox[i]);
                var checkBoxExcp = checkBoxItem.parent().find("input[regnId=" + glbRegionId + "]");
                var checkBoxDefault = checkBoxItem.parent().find("input:first");
                var checkItemDataType = checkBoxItem.attr("datatype");
                var checkSrc;
                if (checkBoxItem.siblings("input[regnId=" + glbRegionId + "][isSendMes=1]").length != 0) {
                    checkSrc = checkBoxItem.siblings("input[regnId=" + glbRegionId + "][isSendMes=1]")
                }else if (checkBoxItem.siblings("input[regnId=moren]").attr("isSendMes") == "1") {
                    checkSrc = checkBoxItem.siblings("input[regnId=moren]")
                }
                var isShow = false;
                if($.inArray(tmpltId,tmpltIds) > -1 || $.inArray(checkBoxItem.parent().find("label").text(),atomNms) > -1){
                    isShow = true;
                }
                if(!isShow){
                    var groupNm = checkBoxItem.parent().parent().find('h3').text();
                    var gnmArr = groupNm.split('-');
                    if(gnmArr.length > 1){
                        if($.inArray(gnmArr[1],groupsuffix)){
                            isShow = true;
                        }
                    }
                }
                if (judgeQaAtom(checkBoxItem)) {
                    //客服口径模板知识且选择的是Q&A类型原子，获取选中原子的同分组其他原子
                    var isRichText = false;//是否为富文本类型
                    //var others = getOther(checkBoxItem, "list-checkbox", "message-add", "id");
                    var others = checkBoxItem.parent().siblings("span[issendmes='1']").find("input.message-add");
                    //判断同分组下其他原子是什么类型
                    if (others){
                        for (var t = 0; t < others.length; t++){
                            var $src;
                            if ($(others[t]).siblings("input[regnId=" + glbRegionId + "][isSendMes=1]").length != 0) {
                                $src = $(others[t]).siblings("input[regnId=" + glbRegionId + "][isSendMes=1]")
                            }else if ($(others[t]).siblings("input[regnId=moren]").attr("isSendMes") == "1") {
                                $src = $(others[t]).siblings("input[regnId=moren]");
                            }
                            if ($(others[t]).attr("datatype") == "13" || ($src && $src.attr("atomType") == "4")) {
                                isRichText = true;
                            }
                        }
                    }
                    if (checkItemDataType == "13" || (checkSrc && checkSrc.attr("atomType")=="4") || isRichText) {
                        //选中的原子类型或者同分组其他原子为富文本类型，转换为链接展示
                        if (
                            (checkBoxExcp.length != 0 && checkBoxExcp.val() != "") ||
                            (checkBoxExcp.length == 0 && checkBoxDefault.val() != "")
                        ) {
                            klgIdArray += checkBoxItem.attr("atomId") + ",";
                            hasRich = true;
                        }
                    }else {
                        getNotRichText(checkBoxItem,checkBoxExcp,checkBoxDefault,isShow);
                    }
                }else {
                    if ((checkBoxExcp.length != 0
                        || checkBoxItem.parent().find("input[regnId=moren]").attr("atomType") != "4")
                        && checkBoxExcp.attr("atomType") != "4"
                        && checkBoxItem.attr("datatype") != "13"
                    ) {
                        getNotRichText(checkBoxItem,checkBoxExcp,checkBoxDefault,isShow);
                    } else if (
                        (checkBoxExcp.length != 0 && checkBoxExcp.val() != "") ||
                        (checkBoxExcp.length == 0 && checkBoxDefault.val() != "")
                    ) {
                        klgIdArray += checkBoxItem.attr("atomId") + ",";
                        hasRich = true;
                    }
                }

            }
              function getNotRichText(checkBoxItem,checkBoxExcp,checkBoxDefault,isShow) {
                var atomNm = checkBoxItem.parent().find("label").text();
                if (checkBoxExcp.val() != undefined) {
                    if (checkBoxExcp.val() != "" &&
                        checkBoxExcp.attr("isSendMes") == "1") {
                        if (atomNm.indexOf("开通-自助办理") != -1) {
                            var productCode = checkBoxExcp[0].defaultValue;
                            if(productCode != null && productCode != undefined && productCode !=''){
                                var config = {
                                    type: 'get',
                                    url: Constants.AJAXURL + '/sendSms/getProductPageURLByProductCode',
                                    data: {
                                        productCode: productCode // 商品ID
                                    },
                                    dataType: 'json',
                                    success: function (data) {
                                        if (data.returnCode == '0') {
                                            var productPageURL = data.object.url;
                                            bizSerialNo = data.object.seqNo;
                                            if(productPageURL){
                                                descString += "<br/>【开通-自助办理】" + "可根据短信链接自助办理业务:" + productPageURL + " ";
                                                // checkBoxExcp.val("可根据短信链接自助办理业务:" + productPageURL);
                                                if("," == klgIdArray.substring(klgIdArray.length - 1, klgIdArray.length)){
                                                    klgIdArray = klgIdArray.substring(0, klgIdArray.length - 1);
                                                }
                                                $("#messageLink").val(descString);
                                                var config = {};
                                                config.basicCon = descString;
                                                config.data = gisParam[klgIndex];
                                                if (hasRich) {
                                                    /*短信链接生成*/
                                                    Util.ajax.ajax({
                                                            type: 'get',
                                                            url: Constants.AJAXURL + '/knowledge/KmDetailMessageGen',
                                                            data: {
                                                                klgId: klg_Id,
                                                                verno: ver_no,
                                                                klgIdArray: klgIdArray,
                                                                glbRegionId: glbRegionId,
                                                                klgNm: klg_Nm,
                                                                rootURL: rootURL
                                                            },
                                                            dataType: 'json', //返回值的数据类型
                                                            async: true,
                                                            success: function (data) {
                                                                var dataObj = data.object;
                                                                if (dataObj == null) {
                                                                    dialogNew.alert({type:'error',message:data.returnMessage});
                                                                    return false;
                                                                }
                                                                if ("" != data.returnMessage) {
                                                                    dialogNew.alert({type:'error',message:data.returnMessage});
                                                                }
                                                                if(data.object&&data.object.recId){
                                                                    recId=data.object.recId;
                                                                }else{
                                                                    recId="";
                                                                }
                                                                $("#messageLink").val(descString + "<br/>【更多内容请登录】" + data.object.url + "。温馨提示：访问链接会产生数据流量，建议您在WiFi环境下访问。");
                                                                // $("#messageLinkPreview").html(dataObj.linkContent);
                                                                if (config.data && config.data.bMLng != "" && config.data.bMLat != "" && config.data.bMLng != undefined && config.data.bMLat != undefined) {
                                                                    var basicCon = descString + "<br/>【更多内容请登录】" + data.object.url + "。温馨提示：访问链接会产生数据流量，建议您在WiFi环境下访问。";
                                                                    config.basicCon = basicCon;
                                                                    routeLink(config);
                                                                } else {
                                                                    $("#messageLink").val(descString + "<br/>【更多内容请登录】" + data.object.url + "。温馨提示：访问链接会产生数据流量，建议您在WiFi环境下访问。");
                                                                    navUrl = "";
                                                                    buildTemplate();
                                                                }
                                                                //短信链接，添加图片预览点击事件
                                                                previewPic();
                                                                messThumbnailEvent();
                                                            }
                                                        }
                                                    )
                                                } else {
                                                    if (config.data && config.data.bMLng != "" && config.data.bMLat != "" && config.data.bMLng != undefined && config.data.bMLat != undefined) {
                                                        if (config.data.gMLat == "" || config.data.gMLng == "") {
                                                            var points = [config.data.bMLng + "," + config.data.bMLat];
                                                            var opts = {
                                                                points: points.join("|"),
                                                                callback: function (results) {
                                                                    var locations = results.split(";");
                                                                    var arr = locations[0].split(",");
                                                                    console.info("web版:" + points[0] + "转换结果:[" + locations[0] + "]");
                                                                    console.info("转换结果:经度" + arr[0] + ",纬度" + arr[1]);
                                                                    config.data.gMLng = arr[0];
                                                                    config.data.gMLat = arr[1];
                                                                    routeLink(config);
                                                                }
                                                            };
                                                            if (point) {
                                                                point.convertor(opts);
                                                            } else {
                                                                routeLink(config);
                                                            }
                                                        } else {
                                                            routeLink(config);
                                                        }
                                                    } else {
                                                        navUrl = "";
                                                        buildTemplate();
                                                    }
                                                }
                                            } else {
                                                dialogNew.alert({type:'error',message:'新电商办理链接获取失败，请重新勾选原子'});
                                                changeAllItems(checkBoxItem.attr("atomId"), "false");
                                                changeDisplayIcon(checkBoxItem.attr("atomId"), "true");
                                            }
                                        } else {
                                            dialogNew.alert({type:'error',message:data.returnMessage});
                                            changeAllItems(checkBoxItem.attr("atomId"), "false");
                                            changeDisplayIcon(checkBoxItem.attr("atomId"), "true");
                                        }
                                    },
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        dialogNew.alert({type:'error',message:errorThrown});

                                    }
                                };
                                Util.ajax.ajax(config);
                            }
                        }else if (atomNm.indexOf("GIS经纬度") != -1){
                            //GIS经纬度转换为地址链接
                            var config = {};
                            config.basicCon = descString;
                            config.data = gisParam[klgIndex];
                            if (config.data && config.data.bMLng != "" && config.data.bMLat != "" && config.data.bMLng != undefined && config.data.bMLat != undefined) {
                                if (config.data.gMLat == "" || config.data.gMLng == "") {
                                    var points = [config.data.bMLng + "," + config.data.bMLat];
                                    var opts = {
                                        points: points.join("|"),
                                        callback: function (results) {
                                            var locations = results.split(";");
                                            var arr = locations[0].split(",");
                                            console.info("web版:" + points[0] + "转换结果:[" + locations[0] + "]");
                                            console.info("转换结果:经度" + arr[0] + ",纬度" + arr[1]);
                                            config.data.gMLng = arr[0];
                                            config.data.gMLat = arr[1];
                                        }
                                    };
                                }
                                Util.ajax.ajax({
                                    type: 'get',
                                    url: Constants.AJAXURL + '/knowledge/KmGISMessageGen?v=' + new Date().getTime(),
                                    data: config.data,
                                    dataType: 'json', //返回值的数据类型
                                    async: false,
                                    success: function (data) {
                                        if (data.object == null) {
                                            dialogNew.alert({type:'error',message: data.returnMessage});
                                            return false;
                                        }
                                        if ("" != data.returnMessage) {
                                            dialogNew.alert({type:'error',message: data.returnMessage});
                                            return false;
                                        }
                                        descString += "<br/>" + data.object.msg + " ";
                                    }
                                })
                            }
                        } else {
                            if(showFlag){
                                descString += "<br/>【" + atomNm + "】" + checkBoxExcp.val() + " ";
                            }else{
                                if(isShow){
                                    descString += "<br/>【" + atomNm + "】" + checkBoxExcp.val() + " ";
                                }else{
                                    descString += "<br/>" + checkBoxExcp.val() + " ";
                                }
                            }
                        }
                    }
                } else {
                    if (checkBoxDefault.val() != "" &&
                        checkBoxDefault.attr("isSendMes") == "1") {
                        if(atomNm.indexOf("开通-自助办理") != -1){
                            var productCode = checkBoxDefault[0].defaultValue;
                            if(productCode != null && productCode != undefined && productCode !=''){
                                var config = {
                                    type: 'get',
                                    url: Constants.AJAXURL + '/sendSms/getProductPageURLByProductCode',
                                    data: {
                                        productCode: productCode // 商品ID
                                    },
                                    dataType: 'json',
                                    success: function (data) {
                                        if (data.returnCode == '0') {
                                            var productPageURL = data.object.url;
                                            bizSerialNo = data.object.seqNo;
                                            if(productPageURL){
                                                descString += "<br/>【开通-自助办理】" + "可根据短信链接自助办理业务:" + productPageURL + " ";
                                                if("," == klgIdArray.substring(klgIdArray.length - 1, klgIdArray.length)) {

                                                    klgIdArray = klgIdArray.substring(0, klgIdArray.length - 1);
                                                }
                                                $("#messageLink").val(descString);
                                                var config = {};
                                                config.basicCon = descString;
                                                config.data = gisParam[klgIndex];
                                                if (hasRich) {
                                                    /*短信链接生成*/
                                                    Util.ajax.ajax({
                                                            type: 'get',
                                                            url: Constants.AJAXURL + '/knowledge/KmDetailMessageGen',
                                                            data: {
                                                                klgId: klg_Id,
                                                                verno: ver_no,
                                                                klgIdArray: klgIdArray,
                                                                glbRegionId: glbRegionId,
                                                                klgNm: klg_Nm,
                                                                rootURL: rootURL
                                                            },
                                                            dataType: 'json', //返回值的数据类型
                                                            async: true,
                                                            success: function (data) {
                                                                var dataObj = data.object;
                                                                if (dataObj == null) {
                                                                    dialogNew.alert({type:'error',message: data.returnMessage});
                                                                    return false;
                                                                }
                                                                if ("" != data.returnMessage) {
                                                                    dialogNew.alert({type:'error',message: data.returnMessage});
                                                                }
                                                                $("#messageLink").val(descString + "<br/>【更多内容请登录】" + data.object.url + "。温馨提示：访问链接会产生数据流量，建议您在WiFi环境下访问。");
                                                                // $("#messageLinkPreview").html(dataObj.linkContent);
                                                                if (config.data && config.data.bMLng != "" && config.data.bMLat != "" && config.data.bMLng != undefined && config.data.bMLat != undefined) {
                                                                    var basicCon = descString + "<br/>【更多内容请登录】" + data.object.url + "。温馨提示：访问链接会产生数据流量，建议您在WiFi环境下访问。";
                                                                    config.basicCon = basicCon;
                                                                    routeLink(config);
                                                                } else {
                                                                    $("#messageLink").val(descString + "<br/>【更多内容请登录】" + data.object.url + "。温馨提示：访问链接会产生数据流量，建议您在WiFi环境下访问。");
                                                                    navUrl = "";
                                                                    buildTemplate();
                                                                }
                                                                if(data.object&&data.object.recId){
                                                                    recId=data.object.recId;
                                                                }else{
                                                                    recId="";
                                                                }
                                                                //短信链接，添加图片预览点击事件
                                                                previewPic();
                                                                messThumbnailEvent();
                                                            }
                                                        }
                                                    )
                                                } else {
                                                    if (config.data && config.data.bMLng != "" && config.data.bMLat != "" && config.data.bMLng != undefined && config.data.bMLat != undefined) {
                                                        if (config.data.gMLat == "" || config.data.gMLng == "") {
                                                            var points = [config.data.bMLng + "," + config.data.bMLat];
                                                            var opts = {
                                                                points: points.join("|"),
                                                                callback: function (results) {
                                                                    var locations = results.split(";");
                                                                    var arr = locations[0].split(",");
                                                                    console.info("web版:" + points[0] + "转换结果:[" + locations[0] + "]");
                                                                    console.info("转换结果:经度" + arr[0] + ",纬度" + arr[1]);
                                                                    config.data.gMLng = arr[0];
                                                                    config.data.gMLat = arr[1];
                                                                    routeLink(config);
                                                                }
                                                            };
                                                            if (point) {
                                                                point.convertor(opts);
                                                            } else {
                                                                routeLink(config);
                                                            }
                                                        } else {
                                                            routeLink(config);
                                                        }
                                                    } else {
                                                        navUrl = "";
                                                        buildTemplate();
                                                    }
                                                }
                                            } else {
                                                dialogNew.alert({type:'error',message: '新电商办理链接获取失败，请重新勾选原子'});
                                                changeAllItems(checkBoxItem.attr("atomId"), "false");
                                                changeDisplayIcon(checkBoxItem.attr("atomId"), "true");
                                            }
                                        } else {
                                            dialogNew.alert({type:'error',message: data.returnMessage});
                                            changeAllItems(checkBoxItem.attr("atomId"), "false");
                                            changeDisplayIcon(checkBoxItem.attr("atomId"), "true");
                                        }
                                    },
                                    error: function (jqXHR, textStatus, errorThrown) {
                                        dialogNew.alert({type:'error',message:errorThrown});

                                    }
                                };
                                Util.ajax.ajax(config);
                            }

                        }else if (atomNm.indexOf("GIS经纬度") != -1){
                            //GIS经纬度转换为地址链接
                            var config = {};
                            config.basicCon = descString;
                            config.data = gisParam[klgIndex];
                            if (config.data && config.data.bMLng != "" && config.data.bMLat != "" && config.data.bMLng != undefined && config.data.bMLat != undefined) {
                                if (config.data.gMLat == "" || config.data.gMLng == "") {
                                    var points = [config.data.bMLng + "," + config.data.bMLat];
                                    var opts = {
                                        points: points.join("|"),
                                        callback: function (results) {
                                            var locations = results.split(";");
                                            var arr = locations[0].split(",");
                                            console.info("web版:" + points[0] + "转换结果:[" + locations[0] + "]");
                                            console.info("转换结果:经度" + arr[0] + ",纬度" + arr[1]);
                                            config.data.gMLng = arr[0];
                                            config.data.gMLat = arr[1];
                                        }
                                    };
                                }
                                Util.ajax.ajax({
                                    type: 'get',
                                    url: Constants.AJAXURL + '/knowledge/KmGISMessageGen?v=' + new Date().getTime(),
                                    data: config.data,
                                    dataType: 'json', //返回值的数据类型
                                    async: false,
                                    success: function (data) {
                                        if (data.object == null) {
                                            dialogNew.alert({type:'error',message: data.returnMessage});
                                            return false;
                                        }
                                        if ("" != data.returnMessage) {
                                            dialogNew.alert({type:'error',message: data.returnMessage});
                                            return false;
                                        }
                                        descString += "<br/>" + data.object.msg + " ";
                                    }
                                })
                            }
                        }  else {
                            if(showFlag){
                                descString += "<br/>【" + atomNm + "】" + checkBoxDefault.val() + " ";
                            }else{
                                if(isShow){
                                    descString += "<br/>【" + atomNm + "】" + checkBoxDefault.val() + " ";
                                }else{
                                    descString += "<br/>" + checkBoxDefault.val() + " ";
                                }
                            }
                        }
                    }
                }
            }
            if("," == klgIdArray.substring(klgIdArray.length - 1, klgIdArray.length)) {

                klgIdArray = klgIdArray.substring(0, klgIdArray.length - 1);
            }
            $("#messageLink").val(descString);
            var config = {};
            config.basicCon = descString;
            config.data = gisParam[klgIndex];
            if (hasRich) {
                /*短信链接生成*/
                Util.ajax.ajax({
                        type: 'get',
                        url: Constants.AJAXURL + '/knowledge/KmDetailMessageGen',
                        data: {
                            klgId: klg_Id,
                            verno: ver_no,
                            klgIdArray: klgIdArray,
                            glbRegionId: glbRegionId,
                            klgNm: klg_Nm,
                            rootURL: rootURL
                        },
                        dataType: 'json', //返回值的数据类型
                        async: true,
                        success: function (data) {
                            var dataObj = data.object;
                            if (dataObj == null) {
                                dialogNew.alert({type:'error',message: data.returnMessage});
                                return false;
                            }
                            if ("" != data.returnMessage) {
                                dialogNew.alert({type:'error',message: data.returnMessage});
                            }
                            $("#messageLinkPreview").html(dataObj.linkContent);
                            $("#messageLink").val(descString + "<br/>【相关内容请登录】" + data.object.url + "。温馨提示：访问链接会产生数据流量，建议您在WiFi环境下访问。");
                            navUrl = "";
                            if(data.object&&data.object.recId){
                                recId=data.object.recId;
                            }else{
                                recId="";
                            }
                            buildTemplate();
                            //短信链接，添加图片预览点击事件
                            previewPic();
                            messThumbnailEvent();
                        }
                    }
                )
            } else {
                navUrl = "";
                buildTemplate();
            }
        }

        /**
         * 生成导航链接
         * @param config
         */
        var routeLink = function (config) {
            //路线短链接
            Util.ajax.ajax({
                type: 'get',
                url: Constants.AJAXURL + '/knowledge/KmGISMessageGen?v=' + new Date().getTime(),
                data: config.data,
                dataType: 'json', //返回值的数据类型
                async: true,
                success: function (data) {
                    if (data.object == null) {
                        dialogNew.alert({type:'error',message: data.returnMessage});
                        return false;
                    }
                    if ("" != data.returnMessage) {
                        dialogNew.alert({type:'error',message: data.returnMessage});
                        return false;
                    }
                    navUrl="<br/>" + data.object.msg;
                    $("#messageLink").val(config.basicCon +"<br/>" + data.object.msg);
                    buildTemplate();
                }
            })
        };

        function sendMsgAgain() {
            $("#sendMsgButton").click();
        }

        var trim = function (str) {
            if (str) {
                return str.replace(/(^\s*)|(\s*$)/g, "");
            }
        };

        var confirmConfig = {
            mode: 'confirm',
            height: '120',
            width: '300',
            beforeOpen: function () {
            },
            cancelValue: '取消',
            okValue: '确定',
            cancel: function () {
                return;
            },
            ok: function () {

            }
        };

        function getPhoneArea(flag) {
            var phoneNum = trim($("#telephone").val());
            var tipsFather = $("#telephone").parent();
            if (flag) {
                if (!phoneNum) {
                    tipsFather.find("div:first").html("没有输入手机号码");
                    tipsFather.addClass("list-tel-warn");
                    return;
                }
                if (!(/^1[3456789]\d{9}$/.test(phoneNum))) {
                    tipsFather.find("div:first").html("输入手机号码格式有误，请重新输入");
                    tipsFather.addClass("list-tel-warn");
                    return;
                }
            }

            if (phoneNum) {
                // if (!Constants.NGKM_CM_PHONE_REGEX.test(phoneNum)) {
                //     tipsFather.find("div:first").html("非移动号码，可能发送不成功，请确认");
                //     tipsFather.addClass("list-tel-warn");
                // } else {
                tipsFather.removeClass("list-tel-warn");
                // }
                var city;
                var prov;
                var flag = true;
                var ngkmCall = localStorage.getItem("ngkm_call") || "0_0";
                var storagePhone = ngkmCall.split("_")[1];
                //初始化下拉框
                if (!regionSelect) {
                    var selectConfig = {
                        el: "#smsRegion",
                        topOption: "请选择",
                        value: "",
                        textField: "regionName",
                        valueField: "regionId",
                        datas: regionMap
                    };
                    regionSelect = new select(selectConfig);
                }
                if (phoneNum == storagePhone){
                    var result = localStorage.getItem("attrCity");
                    if(result){
                        var res = result.split(",");
                        if(res.length == 2){
                            city = res[0];
                            prov = res[1];
                        }else{
                            city = result;
                        }
                    }
                    for (var i = 0; i < regionMap.length; i++) {
                        if (regionMap[i].regionId == city) {
                            regionSelect.setValue(['regionId', regionMap[i].regionId]);
                            flag = false;
                        }
                    }
                    if (flag) {
                        for (var i = 0; i < regionMap.length; i++) {
                            if (regionMap[i].regionId == prov) {
                                regionSelect.setValue(['regionId', regionMap[i].regionId]);
                                return;
                            }
                        }
                        if (regionSelect && regionSelect !==  'undefined') {
                            regionSelect.setValue(1);
                        }
                    }
                } else {
                    Util.ajax.postJson(Constants.AJAXURL + '/sendSms/phoneAreaQuery', {telNum: phoneNum}, function (resultSms, isOkSms) {
                        if (isOkSms == true) {
                            if(resultSms.object){
                                var res = resultSms.object.split(",");
                                if(res.length == 2){
                                    city = res[0];
                                    prov = res[1];
                                }else{
                                    city = resultSms.object;
                                }
                            }
                            for (var i = 0; i < regionMap.length; i++) {
                                if (regionMap[i].regionId == city) {
                                    regionSelect.setValue(['regionId', regionMap[i].regionId]);
                                    flag = false;
                                }
                            }
                            if (flag) {
                                for (var i = 0; i < regionMap.length; i++) {
                                    if (regionMap[i].regionId == prov) {
                                        regionSelect.setValue(['regionId', regionMap[i].regionId]);
                                        return;
                                    }
                                }
                                if (regionSelect && regionSelect !==  'undefined') {
                                    regionSelect.setValue(1);
                                }
                            }
                        } else {
                            //new myAlert({'type': 'confirm', 'text': resultSms.returnMessage, falseShow: false});
                            dialogNew.alert({type:'confirm',message:resultSms.returnMessage, falseShow: false});
                        }
                    })
                }
            }
        };

        var getAcceptNumber = function () {
            getClentPhoneInfo(function (msisdn) {
                $("#telephone").val(msisdn);
                getPhoneArea(false);
            });
        };
        var sendFunc = function () {
            try {
                // NGKM-497 授权短信关联服务请求节点 lizh23 20190408 -begin
                var openMode = KmUtil.getOpenMode() || "1";
                if ("2" == openMode && CrossAPI.url != undefined) {
                    CrossAPI.getContact("getClientBusiInfo", Constants.PARAMJSONBUSINFO,function(clientBusiInfo){
                        CrossAPI.getContact("getSerialNo",function(serialNo){
                            // 保存上一通接触流水
                            if(serialNo){
                                serialNum = serialNo;
                            }
                            sendAuthForDetail(relateIds);
                        });

                    });
                } else {
                    Util.ajax.getJson(Constants.AJAXURL + '/kmClient/getClientInfo' + "?t=" + new Date().getTime(), {}, function (data, state) {
                        if (state) {
                            if (data && data.bean && data.bean.serialNo) {
                                // 保存上一通接触流水
                                if(data.bean.serialNo){
                                    serialNum = data.bean.serialNo;
                                }
                            }
                            sendAuthForDetail(relateIds);
                        }

                    })
                }
            }catch (e) {

                sendAuthForDetail();
            }
        };

        var sendAuthForDetail = function (relateIds) {
            var telInput = $("#telephone");
            var msgInfo;
            if(isHall){
                msgInfo = trim($("#messageInfo").find("li[klgid="+klg_Id+"]").html());
                if (!msgInfo || msgInfo == 'undefined'){
                    //new myAlert({'type': 'success', 'text': '无可发送内容','zIndex':'9999'});
                    dialogNew.alert({type:'success',message:'无可发送内容'});
                    return;
                }
            }else{
                msgInfo = trim($("#messageInfo").html());
            }

            var phoneNum = trim(telInput.val());
            msgInfo = msgInfo.replace(/<br>/gi, "");
            msgInfo = msgInfo.replace(/\s/g, " ");

            var srvIds = "";
            for(var i = 0; i < relateIds.length; i++){
                if(relateIds[i]){
                    srvIds = srvIds + relateIds[i] + "#";
                } else {
                    srvIds = srvIds + "Blank#";
                }

            }
            klgAttrId = "";
            //获取已勾选原子ID
            var checkboxs = $("span[issendmes='1']").find("input[type='checkbox']:checked");

            checkboxs.each(function (index) {
                var atomId = $(this).attr("atomid");
                if (typeof(atomId) == "undefined") {
                    return;
                }
                if (index == checkboxs.length - 1) {
                    klgAttrId += atomId;
                } else {
                    klgAttrId += atomId + ",";
                }
            })
            /*短信发送*/
            if (!isHall && !isDisplay) {
                $(".km-popup.loading-box").show();
                var isHoliday = $("#messageTemplate option:eq(1)").prop("selected");// NGKM-571 知识短信服务回执 -lizh23 2019/05/30
                var front = true;

                if ($("#authorizeMsgSend").parent().hasClass("active")) {
                    // if(atomIdArray.length > 1){
                    //     isForceSend="1";
                    // }
                    isForceSend="0";
                    Util.ajax.postJsonAsync(Constants.AJAXURL + '/sendSms/sendAuthForDetail',
                        {
                            rootURL: rootURL,
                            atomIdStr: atomIdArray.join("@#&"),
                            msgIdArray: msgIdArray,
                            smsTitleStr: smsTitleArray.join("@#&"),
                            navUrl:navUrl,
                            scope: glbRegionId,
                            rcnTelnum: phoneNum,
                            smsTypeCd: Constants.MESSAGE_TYPE,
                            knwlgId: klg_Id,
                            contactId: contactId,
                            relateIds: srvIds,
                            isHoliday: isHoliday,// NGKM-571 知识短信服务回执 -lizh23 2019/05/30
                            front:front,
                            serialNo: serialNum,
                            isNetwork:isNetwork,
                            bizSerialNo:bizSerialNo,
                            smsType:'1',//服务类短信
                            smsMo:smsMo,
                            isForceSend:isForceSend,
                            klgAttrId:klgAttrId
                        }).done(function (data, state) {
                        isNetwork = "1";
                        //isForceSend = "0";
                        $(".km-popup.loading-box").hide();
                        if(data.object.resultList[0] != undefined && "号码非移动" == data.object.resultList[0].content){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                okValue: '确定发送',
                                cancelValue: '取消发送',
                                content: '由于该号码为非移动号码，可能客户无法接收到短信，请确定是否发送？若您确定发送，请与客户确认是否收到！'
                            }
                            var dialog = new Dialog(config);
                            dialog.on('confirm',function(){
                              // 如果点击了 确定发送，再次发送短信，并且不校验是否异网
                                isNetwork = "0";
                                sendFunc();
                                // isNetwork = "1";
                            })
                            return;
                        }else if("短信已停机,无法下发短信" == data.object.resultList[0].content){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                ok: function() {
                                    return true;
                                },
                                okValue: '确认',
                                cancelDisplay: false,
                                content: '发送失败,客户已停机,无法下发短信!'
                            }
                            var dialogCon = new Dialog(config);
                            return;
                        } else if("短信内容字数超过1000" == data.object.resultList[0].content){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                ok: function() {
                                    return true;
                                },
                                okValue: '确认',
                                cancelDisplay: false,
                                content: '发送失败,短信内容字数超过1000。请检查是否包含多个原子,建议选择单个原子发送。若单个原子发送失败,请找采编人员优化原子内容。'
                            }
                            var dialogCon = new Dialog(config);
                            return;
                        } else if("客户明确10086短信免打扰" == data.object.resultList[0].content){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                ok: function() {
                                    return true;
                                },
                                okValue: '确认',
                                cancelDisplay: false,
                                content: ' 发送失败,客户明确10086短信免打扰 '
                            }
                            var dialogCon = new Dialog(config);
                            return;
                        } else if("当前客户今日接收公司平台短信次数已到达上限!" == data.object.resultList[0].content){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                ok: function() {
                                    return true;
                                },
                                okValue: '确认',
                                cancelDisplay: false,
                                content: ' 发送失败,当前客户今日接收公司平台短信次数已到达上限! '
                            }
                            var dialogCon = new Dialog(config);
                            return;
                        }else if("短信内容含敏感词,禁止发送" == data.object.resultList[0].content ){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                cancel: function() {
                                    $("button[i-id=ok]:first").text("发送");
                                    $("button[i-id=ok]:first").attr("disabled",false);
                                    $("#telephone").attr("disabled",false);
                                    $("#cancel").trigger('click');
                                    $("[name=checkMsg]:checkbox").each(function(){
                                        $(this).attr("disabled",false);
                                    })},
                                okValue: '<div><p style="font-size: small;">继续发送</p><p style="font-size: 10px;">(不校验敏感词)</p></div>',
                                cancelValue: '取消',
                                content: '发送失败，短信内容包含敏感词"'+data.object.keywordList+'"请确认是否继续发送！'
                            }
                            var dialog = new Dialog(config);
                            dialog.on('confirm',function(){
                                // 如果点击了 确定发送，再次发送短信，并且不校验是否异网
                                isNetwork = "0";
                                isForceSend = "1";
                                sendFunc();
                                // isNetwork = "1";
                            })
                            return;
                        }

                        //还原未选择状态
                        if (isHall || isDisplay) {
                            //$("#msgPop").remove();
                            // 弹窗删除 滚轮启用
                            $(".skin-dark").removeAttr("style");
                            isInit = true;
                        } else {
                            $("#commonMsgSend").trigger("click");
                            $("#msgPop").hide();
                        }

                        $(".message-add").prop('checked', false);
                        $(".attrData").removeClass("selected");
                        $(".allatom").removeClass("chked");
                        $("#msgNum").val("0");
                        $("#messageSendTop").children("span").remove();
                        $("#messageSendBottom").children("span").remove();
                        if (hasDefault) {
                            defaultModel = false;
                            $("#defaultBtn").prop("checked", false);
                            $("#defaultBtn").trigger("click");
                        }
                        if (data && data.object && data.object.resultList.length) {
                            telInput.parent().removeClass("list-tel-warn");
                            var templeAttr = Util.hdb.compile(sendResult);
                            $("body").append(templeAttr(data.object));
                            // 关闭弹出层
                            $("#msgTitle > a,#cancel").on("click", function () {
                                $("#exceptionDialog").remove();
                            });
                            return;
                        }
                        var sussNum = data.object.sussNum;
                        var serviceReqIds = data.object.serviceReqIds;
                        var relateIdsIsBlank = function () {
                            var flag = true;
                            for (var i = 0; i < serviceReqIds.length; i++) {
                                if (serviceReqIds[i] != "Blank") {
                                    flag = false;
                                    break;
                                }
                            }
                            return flag;
                        };

                        if (serialNum) {

                            if(relateIdsIsBlank()){
                                // reMsg = "短信发送成功";
                                /*new Dialog({
                                    mode: 'tips',
                                    delayRmove: 3.0, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                    tipsType: 'success', //tips类型；可选 success | error，默认普通tips。
                                    content: dialogContent
                                });*/
                                dialogNew.alert({type:'success',message: dialogContent});
                                return;
                            }

                            if (sussNum == 0) {
                                // reMsg = "短信发送成功，直接答复失败";
                                var config = {
                                    mode: 'confirm',
                                    id: 'confirmId',
                                    content: dialogContent+'直接答复失败'
                                }
                                var dialog = new Dialog(config);
                                dialog.on('confirm',function(){

                                })
                            } else {
                                // reMsg = "短信发送成功，共答复" + sussNum + "条服务请求";
                                /*new Dialog({
                                    mode: 'tips',
                                    delayRmove:3.0, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                    tipsType:'success', //tips类型；可选 success | error，默认普通tips。
                                    content: dialogContent+"短信发送成功，共答复" + sussNum + "条服务请求"
                                });*/
                                dialog.alert({type:'success',message: dialogContent+"短信发送成功，共答复" + sussNum + "条服务请求"});
                            }
                        } else {
                            // reMsg = "短信发送成功";
                            /*new Dialog({
                                mode: 'tips',
                                delayRmove:3.0, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                tipsType:'success', //tips类型；可选 success | error，默认普通tips。
                                content: dialogContent
                            });*/
                            dialogNew.alert({type:'success',message: dialogContent});
                        }
                    }).fail(function (data, state) {
                        isNetwork = "1";
                        isForceSend="0";
                        $(".km-popup.loading-box").hide();
                        $("#commonMsgSend").trigger("click");
                        if (isHall || isDisplay) {
                          //  $("#msgPop").remove();
                            // 弹窗删除 滚轮启用
                            $(".skin-dark").removeAttr("style");
                            isInit = true;

                        } else {
                            $("#msgPop").hide();
                            // 弹窗删除 滚轮启用
                            $(".skin-dark").removeAttr("style");
                            isInit = true;

                        }
                        if (data.returnCode=="-1"){
                            dialogNew.alert({type:'success',message: data.returnMessage});
                        }else if(data.returnMessage == "短信已停机,无法下发短信"){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                ok: function() {
                                    return true;
                                },
                                okValue: '确认',
                                cancelDisplay: false,
                                content:'发送失败，客户已停机，无法下发短信！'
                            }
                            var dialogCon = new Dialog(config);

                        } else if(data.returnMessage == "短信内容字数超过1000"){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                ok: function() {
                                    return true;
                                },
                                okValue: '确认',
                                cancelDisplay: false,
                                content:'发送失败，短信内容字数超过1000。请检查是否包含多个原子，建议选择单个原子发送。若单个原子发送失败，请找采编人员优化原子内容 '
                            }
                            var dialogCon = new Dialog(config);

                        } else if(data.returnMessage == "客户明确10086短信免打扰"){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                ok: function() {
                                    return true;
                                },
                                okValue: '确认',
                                cancelDisplay: false,
                                content:'发送失败，客户明确10086短信免打扰。'
                            }
                            var dialogCon = new Dialog(config);

                        } else if(data.returnMessage == "当前客户今日接收公司平台短信次数已到达上限!"){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                ok: function() {
                                    return true;
                                },
                                okValue: '确认',
                                cancelDisplay: false,
                                content:'发送失败，当前客户今日接收公司平台短信次数已到达上限!'
                            }
                            var dialogCon = new Dialog(config);

                        }else if(data.returnMessage == "短信内容含敏感词,禁止发送"){
                            var config = {
                                mode: 'confirm',
                                id: 'confirmId',
                                cancel: function() {
                                    $("button[i-id=ok]:first").text("发送");
                                    $("button[i-id=ok]:first").attr("disabled",false);
                                    $("#telephone").attr("disabled",false);
                                    $("#cancel").trigger('click');
                                    $("[name=checkMsg]:checkbox").each(function(){
                                        $(this).attr("disabled",false);
                                    })},
                                okValue: '<div><p style="font-size: small;">继续发送</p><p style="font-size: 10px;">(不校验敏感词)</p></div>',
                                cancelValue: '取消',
                                content: '发送失败，短信内容包含敏感词"'+data.object.keywordList+'"请确认是否继续发送！'
                            }
                            var dialog = new Dialog(config);
                            dialog.on('confirm',function(){
                                // 如果点击了 确定发送，再次发送短信，并且不校验是否异网
                                isNetwork = "0";
                                isForceSend="1";
                                sendFunc();
                            })
                            return;
                        }else {
                            new myAlert({
                                'type': 'error',
                                // 'text': data.returnMessage,
                                'text': "发送失败",
                                ok: sendMsgAgain
                            });
                        }
                        return;
                    })
                } else {
                    var holiday = $("#messageTemplate option:eq(1)").prop("selected");// NGKM-571 知识短信服务回执 -lizh23 2019/05/30
                    var front = true;
                    Util.ajax.postJson(Constants.AJAXURL + '/sendSms/send',
                        {
                            rcnTelnum: phoneNum,
                            smsCntt: msgInfo,
                            smsTypeCd: Constants.MESSAGE_TYPE,
                            knwlgId: klg_Id,
                            contactId: contactId,
                            scope: glbRegionId, // NGKM-571 知识短信服务回执 -lizh23 2019/05/28
                            holiday: holiday,// NGKM-571 知识短信服务回执 -lizh23 2019/05/30
                            front: front,
                            serialNo: "1",
                            isNetwork:isNetwork, // 增加异网判断标识
                            bizSerialNo:bizSerialNo,
                            smsType:'1',//服务类短信
                            smsMo:smsMo,
                            isForceSend:isForceSend,
                            klgAttrId:klgAttrId,
                            recId:recId
                        },
                        function (resultSms, isOkSms) {
                            isNetwork = "1";
                            isForceSend="0";
                            recId="";
                            $(".km-popup.loading-box").hide();
                            if (isOkSms == true && resultSms.returnMessage == "") {
                                telInput.parent().removeClass("list-tel-warn");
                                /*new Dialog({
                                    mode: 'tips',
                                    delayRmove: 3.0, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                    tipsType: 'success', //tips类型；可选 success | error，默认普通tips。
                                    content: dialogContent
                                });*/
                                dialogNew.alert({type:'success',message: dialogContent});
                                // new myAlert({'type': 'success', 'text': "发送成功"});
                                $("#messageInfo").html("");
                                $("#messageLinkPreview").html("");
                                // NGKM-558 0520 发送短信号码置空逻辑修改 -begin
                                var openMode = KmUtil.getOpenMode() || "1";
                                if ("2" == openMode && CrossAPI.url != undefined) {
                                    CrossAPI.getContact("getClientBusiInfo", Constants.PARAMJSONBUSINFO, function (clientBusiInfo) {
                                        phoneNumber = clientBusiInfo.bean.msisdn || "";
                                        CrossAPI.getContact("getSerialNo", function (serialNo) {
                                            // 保存上一通接触流水
                                            if (serialNo) {
                                                $("#telephone").val(phoneNumber);
                                                $("#msgPop").hide();
                                            } else {
                                                $("#telephone").val("");
                                                $("#msgPop").hide();
                                            }
                                        });
                                    });
                                } else {
                                    Util.ajax.getJson(Constants.AJAXURL + '/kmClient/getClientInfo' + "?t=" + new Date().getTime(), {}, function (data, state) {
                                        if (state) {
                                            if (data && data.bean && data.bean.msisdn) {
                                                phoneNumber = data.bean.msisdn;
                                            }
                                            // if (data && data.bean && data.bean.serialNo) {
                                            // 保存上一通接触流水
                                            if (data.bean.serialNo) {
                                                $("#telephone").val(phoneNumber);
                                                $("#msgPop").hide();
                                            } else {
                                                $("#telephone").val("");
                                                $("#msgPop").hide();
                                            }
                                            // }
                                        }
                                    })
                                }
                                // NGKM-558 0520 发送短信号码置空逻辑修改 -end




                                // $("#msgPop").hide();
                                $(".message-add").prop('checked', false);
                                $(".attrData").removeClass("selected");
                                $(".allatom").removeClass("chked");
                                $("#msgNum").val("0");
                                $("#messageSendTop").children("span").remove();
                                $("#messageSendBottom").children("span").remove();
                                if (hasDefault) {
                                    defaultModel = false;
                                    $("#defaultBtn").prop("checked", false);
                                    $("#defaultBtn").trigger("click");
                                }
                                if (Constants.SCENE_GOABROAD == templtId) {
                                    customModel = 0;
                                    $("#roamBtn").prop("checked", false);
                                    $("#roamBtn").trigger("click");
                                }
                                return;
                            }else if(resultSms.returnMessage == "号码非移动"){
                                var config = {
                                    mode: 'confirm',
                                    id: 'confirmId',
                                    okValue: '确定发送',
                                    cancelValue: '取消发送',
                                    content: '由于该号码为非移动号码，可能客户无法接收到短信，请确定是否发送？若您确定发送，请与客户确认是否收到！'
                                }
                                var dialog = new Dialog(config);
                                dialog.on('confirm',function(){
                                   // 如果点击了 确定发送，再次发送短信，并且不校验是否异网
                                    isNetwork = "0";
                                    sendFunc();
                                    // isNetwork = "1";
                                })
                            }else if(resultSms.returnMessage == "短信已停机,无法下发短信"){
                                var config = {
                                    mode: 'confirm',
                                    id: 'confirmId',
                                    ok: function() {
                                        return true;
                                    },
                                    okValue: '确认',
                                    cancelDisplay: false,
                                    content:'发送失败，客户已停机，无法下发短信！'
                                }
                                var dialogCon = new Dialog(config);

                            } else if(resultSms.returnMessage == "短信内容字数超过1000"){
                                var config = {
                                    mode: 'confirm',
                                    id: 'confirmId',
                                    ok: function() {
                                        return true;
                                    },
                                    okValue: '确认',
                                    cancelDisplay: false,
                                    content:'发送失败，短信内容字数超过1000。请检查是否包含多个原子，建议选择单个原子发送。若单个原子发送失败，请找采编人员优化原子内容 '
                                }
                                var dialogCon = new Dialog(config);

                            } else if(resultSms.returnMessage == "客户明确10086短信免打扰"){
                                var config = {
                                    mode: 'confirm',
                                    id: 'confirmId',
                                    ok: function() {
                                        return true;
                                    },
                                    okValue: '确认',
                                    cancelDisplay: false,
                                    content:'发送失败，客户明确10086短信免打扰。'
                                }
                                var dialogCon = new Dialog(config);
                            }else if(resultSms.returnMessage == "当前客户今日接收公司平台短信次数已到达上限!"){
                                var config = {
                                    mode: 'confirm',
                                    id: 'confirmId',
                                    ok: function() {
                                        return true;
                                    },
                                    okValue: '确认',
                                    cancelDisplay: false,
                                    content:'发送失败，当前客户今日接收公司平台短信次数已到达上限!'
                                }
                                var dialogCon = new Dialog(config);
                            }else if(resultSms.returnMessage == "短信内容含敏感词,禁止发送"){
                                var config = {
                                    mode: 'confirm',
                                    id: 'confirmId',
                                    cancel: function() {
                                        $("button[i-id=ok]:first").text("发送");
                                        $("button[i-id=ok]:first").attr("disabled",false);
                                        $("#telephone").attr("disabled",false);
                                        $("#cancel").trigger('click');
                                        $("[name=checkMsg]:checkbox").each(function(){
                                            $(this).attr("disabled",false);
                                        })},
                                    okValue: '<div><p style="font-size: small;">继续发送</p><p style="font-size: 10px;">(不校验敏感词)</p></div>',
                                    cancelValue: '取消',
                                    content: '发送失败，短信内容包含敏感词"'+resultSms.object+'"请确认是否继续发送！'
                                }
                                var dialog = new Dialog(config);
                                dialog.on('confirm',function(){
                                    // 如果点击了 确定发送，再次发送短信，并且不校验是否异网
                                    isNetwork = "0";
                                    isForceSend="1";
                                    sendFunc();
                                })
                                return;
                            } else{

                                // NGKM-558 0520 发送短信号码置空逻辑修改 -begin
                                var openMode = KmUtil.getOpenMode() || "1";
                                if ("2" == openMode && CrossAPI.url != undefined) {
                                    CrossAPI.getContact("getClientBusiInfo", Constants.PARAMJSONBUSINFO, function (clientBusiInfo) {
                                        phoneNumber = clientBusiInfo.bean.msisdn || "";
                                        CrossAPI.getContact("getSerialNo", function (serialNo) {
                                            // 保存上一通接触流水
                                            if (serialNo) {
                                                $("#telephone").val(phoneNumber);
                                                $("#msgPop").hide();
                                                if (resultSms.returnCode=="-1") {
                                                    dialogNew.alert({type:'success',message: resultSms.returnMessage});
                                                }else {
                                                    new myAlert({
                                                        'type': 'error',
                                                        'text': "发送失败",
                                                         ok: sendMsgAgain
                                                    });
                                                }
                                            } else {
                                                $("#telephone").val("");
                                                $("#msgPop").hide();
                                                if (resultSms.returnCode=="-1") {
                                                    dialogNew.alert({type:'success',message: resultSms.returnMessage});
                                                }else {
                                                    new myAlert({
                                                        'type': 'error',
                                                        'text': "发送失败",
                                                        ok: sendMsgAgain
                                                    });
                                                }
                                            }
                                        });
                                    });
                                } else {
                                    Util.ajax.getJson(Constants.AJAXURL + '/kmClient/getClientInfo' + "?t=" + new Date().getTime(), {}, function (data, state) {
                                        if (state) {
                                            if (data && data.bean && data.bean.msisdn) {
                                                phoneNumber = data.bean.msisdn;
                                            }
                                            // if (data && data.bean && data.bean.serialNo) {
                                            // 保存上一通接触流水
                                            if (data.bean.serialNo) {
                                                $("#telephone").val(phoneNumber);
                                                $("#msgPop").hide();
                                                if (resultSms.returnCode=="-1") {
                                                    dialogNew.alert({type:'success',message: resultSms.returnMessage});
                                                }else {
                                                    new myAlert({
                                                        'type': 'error',
                                                        'text': "发送失败",
                                                        ok: sendMsgAgain
                                                    });
                                                }
                                            } else {
                                                $("#telephone").val("");
                                                $("#msgPop").hide();
                                                if (resultSms.returnCode=="-1") {
                                                    dialogNew.alert({type:'success',message: resultSms.returnMessage});
                                                }else {
                                                    new myAlert({
                                                        'type': 'error',
                                                        'text': "发送失败",
                                                        ok: sendMsgAgain
                                                    });
                                                }
                                            }
                                            // }
                                        }
                                    })
                                }
                                // NGKM-558 0520 发送短信号码置空逻辑修改 -end

                            }
                        })
                }
            } else {
                msgCntt[klg_Id] = msgInfo;
                var hasNotSend = false;
                for (var i = 0; i < knwlgIdArray.length; i++) {
                    if (msgCntt[knwlgIdArray[i]] == "暂无预览") {
                        hasNotSend = true;
                    }
                    if (knlgCntt[knwlgIdArray[i]] && knlgCntt[knwlgIdArray[i]].length > 0 && msgCntt[knwlgIdArray[i]] && msgCntt[knwlgIdArray[i]].length > 0) {
                        $.inArray(knwlgIdArray[i], klgIdArr) == -1 ? klgIdArr.push(knwlgIdArray[i]) : false;
                        $.inArray(klgNmArray[i], klgNmArr) == -1 ? klgNmArr.push(klgNmArray[i]) : false;
                        $.inArray(msgCntt[knwlgIdArray[i]], msgCnttArr) == -1 ? msgCnttArr.push(msgCntt[knwlgIdArray[i]]) : false;
                    }
                }
                if (hasNotSend) {
                    confirmConfig.content = "";
                    confirmConfig.content = "所选知识中包含未选择短信内容的知识，将会发送默认内容，是否发送？";
                    dialog = new Dialog(confirmConfig);
                    dialog.on("confirm", function () {
                        sendForHallFun(telInput, phoneNum, msgInfo, contactId);
                    })
                } else {
                    sendForHallFun(telInput, phoneNum, msgInfo, contactId);
                }
            }
        };

        var sendForHallFun = function (telInput, phoneNum, msgInfo, contactId) {
            //先移除再添加
            if ($.inArray(klg_Id, klgIdArr) != -1) {
                klgIdArr.splice($.inArray(klg_Id, klgIdArr), 1);
            }
            klgIdArr.push(klg_Id);

            if ($.inArray(klg_Nm, klgNmArr) != -1) {
                klgNmArr.splice($.inArray(klg_Nm, klgNmArr), 1);
            }
            klgNmArr.push(klg_Nm);

            if ($.inArray(msgInfo, msgCnttArr) != -1) {
                msgCnttArr.splice($.inArray(msgInfo, msgCnttArr), 1);
            }
            msgCnttArr.push(msgInfo);

            // var unPreviewKlg = [];
            var unGisParam=[];
            for (var i = 0; i < knwlgIdArray.length; i++) {
                // $.inArray(knwlgIdArray[i], klgIdArr) == -1 ? unPreviewKlg.push(knwlgIdArray[i]) : false;
                $.inArray(knwlgIdArray[i], klgIdArr) == -1 ? unGisParam.push(gisParam[i]) : false;
            }
            if (dialog) {
                dialog.close();
            }
            $(".km-popup.loading-box").show();
            var isHoliday = $("#messageTemplate option:eq(1)").prop("selected");// NGKM-571 知识短信服务回执 -lizh23 2019/05/30
            var front = true;
            if(klgIdArr.length > 1){
                isForceSend="1";
            }
            Util.ajax.postJsonAsync(Constants.AJAXURL + '/sendSms/sendForHall',
                {
                    rootURL: rootURL,
                    unGisParam:JSON.stringify(unGisParam),
                    klgIdArr: klgIdArr,
                    klgNmStr: klgNmArr.join("@#&"),
                    msgCnttStr: msgCnttArr.join("@#&"),
                    rcnTelnum: phoneNum,
                    smsTypeCd: Constants.MESSAGE_TYPE,
                    knwlgId: klg_Id,
                    contactId: contactId,
                    isHoliday: isHoliday,// NGKM-571 知识短信服务回执 -lizh23 2019/05/30
                    scope: glbRegionId, // NGKM-571 知识短信服务回执 -lizh23 2019/05/28
                    front:front,
                    serialNo: "1",
                    isNetwork:isNetwork,
                    bizSerialNo:bizSerialNo,
                    smsType:'1',//服务类短信
                    isForceSend:isForceSend,
                    smsMo:smsMo,
                    klgAttrId:klgAttrId
                }).done(function (data, state) {
                    isNetwork = "1";
                    isForceSend="0";
                $(".km-popup.loading-box").hide();
                if(data.object.resultList[0] != undefined && "号码非移动" == data.object.resultList[0].content){
                    var config = {
                        mode: 'confirm',
                        id: 'confirmId',
                        okValue: '确定发送',
                        cancelValue: '取消发送',
                        content: '由于该号码为非移动号码，可能客户无法接收到短信，请确定是否发送？若您确定发送，请与客户确认是否收到！'
                    }
                    var dialog = new Dialog(config);
                    dialog.on('confirm',function(){
                       // 如果点击了 确定发送，再次发送短信，并且不校验是否异网
                        isNetwork = "0";
                        sendFunc();
                        // isNetwork = "1";
                    })
                    return;
                }else if("短信已停机,无法下发短信" == data.returnMessage){
                    var config = {
                        mode: 'confirm',
                        id: 'confirmId',
                        ok: function() {
                            return true;
                        },
                        okValue: '确认',
                        cancelDisplay: false,
                        content: '发送失败，客户已停机，无法下发短信！'
                    }
                    var dialogCon = new Dialog(config);
                    dialogCon.on('confirm',function(){
                        $("button[i-id=ok]:first").attr("disabled",true);
                        $("#telephone").attr("disabled",true);
                        $("[name=checkMsg]:checkbox").each(function(){
                            $(this).attr("disabled",true);
                            //$("#msgContent_"+$(this).val()).attr("disabled",true);
                            $("#msgDiv_"+$(this).val()).removeClass("failure");
                            //$("#msgDiv_"+$(this).val()).removeClass("success");
                        });
                        dialogCon.remove();
                    });

                    return;
                } else if("短信内容字数超过1000" == data.returnMessage){
                    var config = {
                        mode: 'confirm',
                        ok: function() {
                            return true;
                        },
                        okValue: '确认',
                        cancelDisplay: false,
                        content: '发送失败，短信内容字数超过1000。请检查是否包含多个原子，建议选择单个原子发送.若单个原子发送失败，请找采编人员优化原子内容'
                    }
                    var dialogCon = new Dialog(config);
                    dialogCon.on('confirm',function(){
                        $("button[i-id=ok]:first").attr("disabled",true);
                        $("#telephone").attr("disabled",true);
                        $("[name=checkMsg]:checkbox").each(function(){
                            $(this).attr("disabled",true);
                            //$("#msgContent_"+$(this).val()).attr("disabled",true);
                            $("#msgDiv_"+$(this).val()).removeClass("failure");
                            //$("#msgDiv_"+$(this).val()).removeClass("success");
                        });
                        dialogCon.remove();
                    });

                    return;
                } else if("客户明确10086短信免打扰" == data.returnMessage ){
                    var config = {
                        mode: 'confirm',
                        id: 'confirmId',
                        ok: function() {
                            return true;
                        },
                        okValue: '确认',
                        cancelDisplay: false,
                        content: '发送失败，客户明确10086短信免打扰。'
                    }
                    var dialogCon = new Dialog(config);
                    dialogCon.on('confirm',function(){
                        $("button[i-id=ok]:first").attr("disabled",true);
                        $("#telephone").attr("disabled",true);
                        $("[name=checkMsg]:checkbox").each(function(){
                            $(this).attr("disabled",true);
                            //$("#msgContent_"+$(this).val()).attr("disabled",true);
                            $("#msgDiv_"+$(this).val()).removeClass("failure");
                            //$("#msgDiv_"+$(this).val()).removeClass("success");
                        });
                        dialogCon.remove();
                    });

                    return;
                }else if("当前客户今日接收公司平台短信次数已到达上限!" == data.returnMessage ){
                    var config = {
                        mode: 'confirm',
                        id: 'confirmId',
                        ok: function() {
                            return true;
                        },
                        okValue: '确认',
                        cancelDisplay: false,
                        content: '发送失败，当前客户今日接收公司平台短信次数已到达上限!'
                    }
                    var dialogCon = new Dialog(config);
                    dialogCon.on('confirm',function(){
                        $("button[i-id=ok]:first").attr("disabled",true);
                        $("#telephone").attr("disabled",true);
                        $("[name=checkMsg]:checkbox").each(function(){
                            $(this).attr("disabled",true);
                            //$("#msgContent_"+$(this).val()).attr("disabled",true);
                            $("#msgDiv_"+$(this).val()).removeClass("failure");
                            //$("#msgDiv_"+$(this).val()).removeClass("success");
                        });
                        dialogCon.remove();
                    });

                    return;
                }else if("短信内容含敏感词,禁止发送" == data.returnMessage && klgIdArr.length == 1){
                    var config = {
                        mode: 'confirm',
                        id: 'confirmId',
                        cancel: function() {
                            $("button[i-id=ok]:first").text("发送");
                            $("button[i-id=ok]:first").attr("disabled",false);
                            $("#telephone").attr("disabled",false);
                            $("#cancel").trigger('click');
                            $("[name=checkMsg]:checkbox").each(function(){
                                $(this).attr("disabled",false);
                            })},
                        okValue: '<div><p style="font-size: small;">继续发送</p><p style="font-size: 10px;">(不校验敏感词)</p></div>',
                        cancelValue: '取消',
                        content: '发送失败，短信内容包含敏感词"'+data.object.keywordList+'"请确认是否继续发送！'
                    }
                    var dialog = new Dialog(config);
                    dialog.on('confirm',function(){
                        // 如果点击了 确定发送，再次发送短信，并且不校验是否异网
                        isNetwork = "0";
                        isForceSend="1";
                        sendFunc();
                        // isNetwork = "1";
                    })
                    return;
                }

                $("#msgPop").remove();
                // 弹窗删除 滚轮启用
                $(".skin-dark").removeAttr("style");
                isInit = true;

                finalClear();

                if (data && data.object && data.object.resultList.length) {
                    telInput.parent().removeClass("list-tel-warn");
                    var templeAttr = Util.hdb.compile(sendResult);
                    $("body").append(templeAttr(data.object));
                    // 关闭弹出层
                    $("#msgTitle > a,#cancel").on("click", function () {
                        $(".km-popup.info-box").remove();
                    });

                    return;
                }
                /*new Dialog({
                    mode: 'tips',
                    delayRmove: 3.0, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                    tipsType: 'success', //tips类型；可选 success | error，默认普通tips。
                    content: dialogContent
                });*/
                dialogNew.alert({type:'success',message: dialogContent});
                // new myAlert({'type': 'success', 'text': "发送成功"});
                return;
            }).fail(function (data, state) {
                isNetwork = "1";
                isForceSend="0";
                $(".km-popup.loading-box").hide();
                if (data.returnCode=="-1") {
                    dialogNew.alert({type:'success',message: data.returnMessage});
                }else if("短信已停机,无法下发短信" ==  data.returnMessage){
                    var config = {
                        mode: 'confirm',
                        id: 'confirmId',
                        ok: function() {
                            return true;
                        },
                        okValue: '确认',
                        cancelDisplay: false,
                        content: '发送失败，客户已停机，无法下发短信！'
                    }
                    var dialogCon = new Dialog(config);

                    return;
                } else if("短信内容字数超过1000" ==  data.returnMessage){
                    var config = {
                        mode: 'confirm',
                        ok: function() {
                            return true;
                        },
                        okValue: '确认',
                        cancelDisplay: false,
                        content: '发送失败，短信内容字数超过1000。请检查是否包含多个原子，建议选择单个原子发送.若单个原子发送失败，请找采编人员优化原子内容'
                    }
                    var dialogCon = new Dialog(config);
                    return;
                } else if("客户明确10086短信免打扰" == data.returnMessage){
                    var config = {
                        mode: 'confirm',
                        id: 'confirmId',
                        ok: function() {
                            return true;
                        },
                        okValue: '确认',
                        cancelDisplay: false,
                        content: '发送失败，客户明确10086短信免打扰。'
                    }
                    var dialogCon = new Dialog(config);
                    return;
                } else if("当前客户今日接收公司平台短信次数已到达上限!" == data.returnMessage){
                    var config = {
                        mode: 'confirm',
                        id: 'confirmId',
                        ok: function() {
                            return true;
                        },
                        okValue: '确认',
                        cancelDisplay: false,
                        content: '发送失败，当前客户今日接收公司平台短信次数已到达上限!'
                    }
                    var dialogCon = new Dialog(config);
                    return;
                }else if("短信内容含敏感词,禁止发送" ==  data.returnMessage && klgIdArr.length == 1){
                    var config = {
                        mode: 'confirm',
                        id: 'confirmId',
                        cancel: function() {
                            $("button[i-id=ok]:first").text("发送");
                            $("button[i-id=ok]:first").attr("disabled",false);
                            $("#telephone").attr("disabled",false);
                            $("#cancel").trigger('click');

                            $("[name=checkMsg]:checkbox").each(function(){
                                $(this).attr("disabled",false);
                            })},
                        okValue: '<div><p style="font-size: small;">继续发送</p><p style="font-size: 10px;">(不校验敏感词)</p></div>',
                        cancelValue: '取消',
                        content: '发送失败，短信内容包含敏感词"'+data.object+'"请确认是否继续发送！'
                    }
                    var dialog = new Dialog(config);
                    dialog.on('confirm',function(){
                        // 如果点击了 确定发送，再次发送短信，并且不校验是否异网
                        isNetwork = "0";
                        isForceSend="1";
                        sendFunc();
                        // isNetwork = "1";
                    })
                    return;
                }else {
                    new myAlert({
                        'type': 'error',
                        // 'text': data.returnMessage,
                        'text': "发送失败",
                        ok: sendMsgAgain
                    });
                }
                return;
            })
        };

        // 判断IE浏览器版本
        function IEVersion() {
            var platform;//系统版本
            var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串  
            var isIE = userAgent.indexOf("compatible") > -1 && userAgent.indexOf("MSIE") > -1; //判断是否IE<11浏览器  
            var isEdge = userAgent.indexOf("Edge") > -1 && !isIE; //判断是否IE的Edge浏览器  
            var isIE11 = userAgent.indexOf('Trident') > -1 && userAgent.indexOf("rv:11.0") > -1;
            if (userAgent.indexOf("Windows NT 5") != -1) {
                // console.log("这是XP系统");
            } else if (userAgent.indexOf("Windows NT 7") != -1 || userAgent.indexOf("Windows NT 6.1") != -1) {
                platform = 7;
            } else if (userAgent.indexOf("Windows NT 10") != -1) {
                platform = 10;
            }
            if (isIE) {
                var reIE = new RegExp("MSIE (\\d+\\.\\d+);");
                reIE.test(userAgent);
                var fIEVersion = parseFloat(RegExp["$1"]);
                if (fIEVersion == 7) {
                    return 7;
                } else if (fIEVersion == 8) {
                    return 8;
                } else if (fIEVersion == 9) {
                    return 9;
                } else if (fIEVersion == 10) {
                    return 10;
                } else {
                    return 6;//IE版本<=7
                }
            } else if (isEdge) {
                return -2;//edge
            } else if (isIE11) {
                return 11; //IE11  
            } else {
                return -1;//不是ie浏览器
            }
        }
        var getCallInfo_local = function (callback) {
            // window.postMessage('get_callingInfoForMessage');
            // window.addEventListener("message", function (e) {  // 监听 message 事件
            //     console.log('监听获取通话',e);
            // })
            // if (window.addEventListener) {//ie8+
            //     var fn = function (e) {
            //         if (e.key == 'callingInfoForMessage') {
            //             var messageToChat = localStorage.getItem("callingInfoForMessage");
            //             if (messageToChat) {
            //                 callback(JSON.parse(messageToChat));
            //                 window.removeEventListener("storage", fn);
            //                 window.localStorage.removeItem("callingInfoForMessage");
            //             }
            //         }
            //     }
            //     window.addEventListener("storage", fn);
            // } else {//ie8
            //     var fnIE = function (e) {
            //         var messageToChat = localStorage.getItem("callingInfoForMessage");
            //         if (messageToChat) {
            //             callback(JSON.parse(messageToChat));
            //             $(document).off("storage", fnIE);
            //             window.localStorage.removeItem("callingInfoForMessage");
            //         }
            //     }
            //     $(document).on("storage", fnIE);
            // }
            // window.localStorage.setItem("send_to_chat_flag", new Date().getTime());
            var messageToChat = localStorage.getItem("callingInfoForMessage");
            if (messageToChat) {
                callback(JSON.parse(messageToChat));
            } else {
                new Dialog({
                    mode: 'tips',
                    delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                    tipsType: 'error', //tips类型；可选 success | error，默认普通tips。
                    content: '非通话状态下暂不支持发送交谈区'
                });
            }
        }
        //事件初始化
        var eventInitAttr = function () {
            //电话号码条propertychange事件
            $("#telephone").on('input propertychange', function () {
                if ($("#msgPop").css("display") != "none") {
                    getPhoneArea(true)
                }
            });
            //选中分组下所有可发短信的原子
            $("body").on("click", ".left-content .allatom", function () {
                var thisObj = $(this);
                var atomList = thisObj.parents(".left-content").find(".attrData");
                var checkBox = $("div.list-checkbox").children("span").find("input[name='check-style']");
                if (thisObj.hasClass("chked")) {
                    for (var i = 0; i < atomList.length; i++) {
                        var atomItem = $(atomList[i]);
                        atomItem.removeClass("selected");
                        if(selectAtomIds){
                            addItem(selectAtomIds,  atomItemSo.attr("id"), "false");
                        }
                        for (var j = checkBox.length - 1; j >= 0; j--) {
                            if ($(checkBox[j]).attr("atomId") == atomItem.attr("id")) {
                                checkBox[j].checked = false;
                            }
                        }
                    }
                    thisObj.removeClass("chked");
                } else {
                    for (var i = 0; i < atomList.length; i++) {
                        var atomItemSo = $(atomList[i]);
                        //过滤掉卡片类型
                        var paratypecd = $(atomItemSo).parent('div.left-words').attr("paratypecd");
                        if (paratypecd == "22") {
                            continue;
                        }
                        atomItemSo.addClass("selected");
                        if(selectAtomIds){
                            addItem(selectAtomIds,  atomItemSo.attr("id"), "true");
                        }
                        for (var j = checkBox.length - 1; j >= 0; j--) {
                            if ($(checkBox[j]).attr("atomId") == atomItemSo.attr("id")) {
                                checkBox[j].checked = true;
                            }
                        }
                    }
                    thisObj.addClass("chked");
                }
                mailNumChange();
                getMessageLink();
            });
            // 发送到聊天区
            $("#send-msg-chat").unbind().click(function (e) {
                var openMode = KmUtil.getOpenMode() || "1";
                if (openMode == "1") {//open打开
                    // var ieVersion = IEVersion();
                    // if (ieVersion == 9) {
                    //     new Dialog({
                    //         mode: 'tips',
                    //         delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                    //         tipsType: 'error', //tips类型；可选 success | error，默认普通tips。
                    //         content: 'ie9浏览器暂不支持此功能！'
                    //     });
                    //     return;
                    // }
                    getCallInfo_local(function (CallingInfo) {
                        var isExistContent = 1;
                        var msgNum = $("#msgNum").val();
                        var lis = $("#messageInfo").find("li");
                        for (var i = 0; i < lis.length; i++) {
                            var concent = $(lis[i]).html();
                            if (concent == "暂无预览") {
                                isExistContent = 0;
                            }
                        }
                        if ((msgNum == 0 && $("#commonMsgSend").hasClass("active")) || $("#messageInfo").html() == "" || $("#messageInfo").html() == "暂无预览" || $("#messageInfo").find("li.chked").html() == "暂无预览" || isExistContent == 0) {
                            dialogNew.alert({ type: 'error', message: '尚未选中或没有可发送的内容！' });
                            return false;
                        }


                        var msgInfo;//短信内容
                        if (isHall) {
                            msgInfo = trim($("#messageInfo").find("li[klgid=" + klg_Id + "]").html());
                            if (!msgInfo || msgInfo == 'undefined') {
                                dialogNew.alert({ type: 'success', message: '无可发送内容' });
                                return;
                            }
                        } else {
                            msgInfo = trim($("#messageInfo").html());
                        }
                        // msgInfo = msgInfo.replace(/<br>/gi, "");
                        msgInfo = msgInfo.replace(/\s/g, " ");
                        msgInfo = msgInfo.replace(/尊敬的客户，您好，您刚才致电10086 咨询的/g, "");
                        msgInfo = msgInfo.replace(/【中国移动】/g, "");

                        if (CallingInfo.serialNo) {
                            var serialNo = CallingInfo.serialNo;//会话流水号
                            var isMainSession = CallingInfo.isMainSession;//isMainSession==Y或N为协同会话
                            var currentMediaType = CallingInfo.currentMediaType;//当前会话的真实媒体类型，在音视频升降级场景下，此媒体类型为实际的媒体类型，即实时的会话媒体类型：5 音频 7视频
                            if (!isMainSession) {
                                // 单一会话
                                if (!(currentMediaType == 5 || currentMediaType == 7)) {//IM类型
                                    $.extend(Constants.PARAMJSONCALL, {
                                        "serialNo": serialNo,
                                        "content": msgInfo,
                                        "timestamp": new Date().getTime()
                                    });
                                    // CrossAPI.getContact('getMarketingInfo', Constants.PARAMJSONCALL, function (data) {
                                    //     console.log('发送到聊天区',data);
                                    // })
                                    window.localStorage.setItem("sendMessageToChat", JSON.stringify(Constants.PARAMJSONCALL));
                                    new Dialog({
                                        mode: 'tips',
                                        delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                        tipsType: 'success', //tips类型；可选 success | error，默认普通tips。
                                        content: '发送成功'
                                    });
                                } else {
                                    new Dialog({
                                        mode: 'tips',
                                        delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                        tipsType: 'error', //tips类型；可选 success | error，默认普通tips。
                                        content: '当前会话暂不支持发送聊天对话交谈区'
                                    });
                                }
                            } else {
                                var mainTypeFlag = false;
                                var submediaTypeFlag = false;
                                var subCallingInfo = CallingInfo.subCallingInfo;
                                // 协同会话
                                if (isMainSession == "Y" && (CallingInfo.mediaType == 5 || CallingInfo.mediaType == 7)) {
                                    mainTypeFlag = true;
                                }
                                if (subCallingInfo && subCallingInfo.isMainSession == 'N') {
                                    if (subCallingInfo.currentMediaType == 5 || subCallingInfo.currentMediaType == 7) {
                                        // 非IM类型
                                        submediaTypeFlag = true;
                                    }
                                }

                                if (!mainTypeFlag || !submediaTypeFlag) {
                                    if (isMainSession == "Y") {//主会话
                                        if (!(CallingInfo.mediaType == 5 || CallingInfo.mediaType == 7)) {
                                            $.extend(Constants.PARAMJSONCALL, {
                                                "serialNo": serialNo,
                                                "content": msgInfo,
                                                "timestamp": new Date().getTime()
                                            });
                                            // CrossAPI.getContact('getMarketingInfo', Constants.PARAMJSONCALL, function (data) {
                                            //     console.log('发送到聊天区',data);
                                            // })
                                            window.localStorage.setItem("sendMessageToChat", JSON.stringify(Constants.PARAMJSONCALL));
                                        }
                                    }
                                    if (subCallingInfo && subCallingInfo.isMainSession == 'N') {//子会话信息
                                        if (!(subCallingInfo.currentMediaType == 5 || subCallingInfo.currentMediaType == 7)) {
                                            var subSerialNo = subCallingInfo.serialNo;//子会话流水号
                                            $.extend(Constants.PARAMJSONCALL, {
                                                "serialNo": subSerialNo,
                                                "content": msgInfo
                                            });
                                            // CrossAPI.getContact('getMarketingInfo', Constants.PARAMJSONCALL, function (data) {
                                            //     console.log('发送到聊天区',data);
                                            // })
                                            window.localStorage.setItem("sendMessageToChat", JSON.stringify(Constants.PARAMJSONCALL));
                                        }
                                    }
                                    new Dialog({
                                        mode: 'tips',
                                        delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                        tipsType: 'success', //tips类型；可选 success | error，默认普通tips。
                                        content: '发送成功'
                                    });
                                } else {
                                    new Dialog({
                                        mode: 'tips',
                                        delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                        tipsType: 'error', //tips类型；可选 success | error，默认普通tips。
                                        content: '当前会话暂不支持发送聊天对话交谈区'
                                    });
                                }
                            }
                        } else {
                            new Dialog({
                                mode: 'tips',
                                delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                tipsType: 'error', //tips类型；可选 success | error，默认普通tips。
                                content: '非通话状态下暂不支持发送交谈区'
                            });
                        }
                    });
                } else {
                    CrossAPI.getContact('getCallingInfo', Constants.PARAMJSONCALL, function (CallingInfo) {

                        var isExistContent = 1;
                        var msgNum = $("#msgNum").val();
                        var lis = $("#messageInfo").find("li");
                        for (var i = 0; i < lis.length; i++) {
                            var concent = $(lis[i]).html();
                            if (concent == "暂无预览") {
                                isExistContent = 0;
                            }
                        }
                        if ((msgNum == 0 && $("#commonMsgSend").hasClass("active")) || $("#messageInfo").html() == "" || $("#messageInfo").html() == "暂无预览" || $("#messageInfo").find("li.chked").html() == "暂无预览" || isExistContent == 0) {
                            dialogNew.alert({ type: 'error', message: '尚未选中或没有可发送的内容！' });
                            return false;
                        }
    
    
                        var msgInfo;//短信内容
                        if (isHall) {
                            msgInfo = trim($("#messageInfo").find("li[klgid=" + klg_Id + "]").html());
                            if (!msgInfo || msgInfo == 'undefined') {
                                dialogNew.alert({ type: 'success', message: '无可发送内容' });
                                return;
                            }
                        } else {
                            msgInfo = trim($("#messageInfo").html());
                        }
                        // msgInfo = msgInfo.replace(/<br>/gi, "");
                        msgInfo = msgInfo.replace(/\s/g, " ");
                        msgInfo = msgInfo.replace(/尊敬的客户，您好，您刚才致电10086 咨询的/g, "");
                        msgInfo = msgInfo.replace(/【中国移动】/g, "");
    
                        if (CallingInfo) {
                            var serialNo = CallingInfo.serialNo;//会话流水号
                            var isMainSession = CallingInfo.isMainSession;//isMainSession==Y或N为协同会话
                            var currentMediaType = CallingInfo.currentMediaType;//当前会话的真实媒体类型，在音视频升降级场景下，此媒体类型为实际的媒体类型，即实时的会话媒体类型：5 音频 7视频
                            if (!isMainSession) {
                                // 单一会话
                                if (!(currentMediaType == 5 || currentMediaType == 7)) {//IM类型
                                    $.extend(Constants.PARAMJSONCALL, {
                                        "serialNo": serialNo,
                                        "content": msgInfo,
                                        "timestamp": new Date().getTime()
                                    });
                                    CrossAPI.getContact('getMarketingInfo', Constants.PARAMJSONCALL, function (data) {
                                        console.log('发送到聊天区',data);
                                    })
                                    new Dialog({
                                        mode: 'tips',
                                        delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                        tipsType: 'success', //tips类型；可选 success | error，默认普通tips。
                                        content: '发送成功'
                                    });
                                } else {
                                    new Dialog({
                                        mode: 'tips',
                                        delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                        tipsType: 'error', //tips类型；可选 success | error，默认普通tips。
                                        content: '当前会话暂不支持发送聊天对话交谈区'
                                    });
                                }
                            } else {
                                var mainTypeFlag = false;
                                var submediaTypeFlag = false;
                                var subCallingInfo = CallingInfo.subCallingInfo;
                                // 协同会话
                                if (isMainSession == "Y" && (CallingInfo.mediaType == 5 || CallingInfo.mediaType == 7)) {
                                    mainTypeFlag = true;
                                }
                                if (subCallingInfo && subCallingInfo.isMainSession == 'N') {
                                    if (subCallingInfo.currentMediaType == 5 || subCallingInfo.currentMediaType == 7) {
                                        // 非IM类型
                                        submediaTypeFlag = true;
                                    }
                                }
                                
                                if (!mainTypeFlag || !submediaTypeFlag) {
                                    if (isMainSession == "Y") {//主会话
                                        if (!(CallingInfo.mediaType == 5 || CallingInfo.mediaType == 7)) {
                                            $.extend(Constants.PARAMJSONCALL, {
                                                "serialNo": serialNo,
                                                "content": msgInfo,
                                                "timestamp": new Date().getTime()
                                            });
                                            CrossAPI.getContact('getMarketingInfo', Constants.PARAMJSONCALL, function (data) {
                                                console.log('发送到聊天区',data);
                                            })
                                        }
                                    }
                                    if (subCallingInfo && subCallingInfo.isMainSession == 'N') {//子会话信息
                                        if (!(subCallingInfo.currentMediaType == 5 || subCallingInfo.currentMediaType == 7)) {
                                            var subSerialNo = subCallingInfo.serialNo;//子会话流水号
                                            $.extend(Constants.PARAMJSONCALL, {
                                                "serialNo": subSerialNo,
                                                "content": msgInfo
                                            });
                                            CrossAPI.getContact('getMarketingInfo', Constants.PARAMJSONCALL, function (data) {
                                                console.log('发送到聊天区',data);
                                            })
                                        }
                                    }
                                    new Dialog({
                                        mode: 'tips',
                                        delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                        tipsType: 'success', //tips类型；可选 success | error，默认普通tips。
                                        content: '发送成功'
                                    });
                                } else {
                                    new Dialog({
                                        mode: 'tips',
                                        delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                        tipsType: 'error', //tips类型；可选 success | error，默认普通tips。
                                        content: '当前会话暂不支持发送聊天对话交谈区'
                                    });
                                }
                            }
                        } else {
                            new Dialog({
                                mode: 'tips',
                                delayRmove: 4, //延迟删除秒数设定 tips默认3秒,非tips默认不关闭。
                                tipsType: 'error', //tips类型；可选 success | error，默认普通tips。
                                content: '非通话状态下暂不支持发送交谈区'
                            });
                        }
                    });
                }
            })
            //点击发送短信事件
            $("#sendMsgButton").unbind().click(function (e) {
                // gisParam=[];
                klgIndex=0;
                var isExistContent = 1;
                var phoneNum = trim($("#telephone").val());
                var tipsFather = $("#telephone").parent();
                if (!phoneNum) {
                    tipsFather.addClass("list-tel-warn");
                    return;
                }
                if (!(/^1[3456789]\d{9}$/.test(phoneNum))) {
                    tipsFather.addClass("list-tel-warn");
                    return;
                }
                var msgNum = $("#msgNum").val();

                var lis = $("#messageInfo").find("li");

                for (var i = 0; i < lis.length; i++) {
                    var concent = $(lis[i]).html();
                    if (concent == "暂无预览") {
                        isExistContent = 0;
                    }
                }

                if ((msgNum == 0 && $("#commonMsgSend").hasClass("active")) || $("#messageInfo").html() == "" || $("#messageInfo").html() == "暂无预览" || $("#messageInfo").find("li.chked").html() == "暂无预览" || isExistContent == 0) {
                    /*new Dialog({
                        mode: 'tips',
                        tipsType: 'error',
                        content: '尚未选中或没有可发送的内容！',
                        height: 20
                    });*/
                    dialogNew.alert({type:'error',message: '尚未选中或没有可发送的内容！'});
                    return false;
                }
                // if (!Constants.NGKM_CM_PHONE_REGEX.test(phoneNum)) {
                //     confirmConfig.content = "";
                //     confirmConfig.content = "该号码为非移动号码，可能发送不成功，是否发送？";
                //     dialog = new Dialog(confirmConfig);
                //     dialog.on("confirm", function () {
                //         sendFunc();
                //     })
                // } else {
                // }
                if (!Constants.NGKM_CM_PHONE_REGEX.test(phoneNum)) {
                    dialogContent = "短信已发送，由于该号码为非移动或携号转网号码，可能客户无法接收到短信，请与客户核实！";
                }else {
                    dialogContent = "发送成功";
                }
                sendFunc();

                // <editor-fold desc="ngkm_text_mes_usage 发送短信">
                var duration = (Date.parse(new Date()) - sensorMsgClickTimeStart)/1000;
                Util.ajax.getJson(Constants.AJAXURL + "/sensorsdata/getSensorsdata?t=" + +new Date().getTime(), {}, function (data) {
                    if (data.returnCode == 0 && data.object == "true") {
                        if (sensorsdata) {
                            sensorsdata.track("ngkm_text_mes_usage", {
                                $url: window.location.href,
                                model_name: sensorSendMsgPage,
                                end_type: '发送短信',
                                duration: duration
                            });
                        }
                    }
                });
                // </editor-fold>

                e.stopPropagation();//阻止事件冒泡
                return false;
            });
            $(".city-refresh").click(function () {
                getClentPhoneInfo(function (msisdn) {
                    var telInput = $("#telephone");
                    telInput.val(msisdn);
                    var phoneNum = trim(telInput.val());
                    var tipsFather = telInput.parent();
                    if (!(/^1[3456789]\d{9}$/.test(phoneNum))) {
                        tipsFather.find("div:first").html("输入手机号码格式有误，请重新输入");
                        tipsFather.addClass("list-tel-warn");
                        telInput.bind("'input propertychange'", function () {
                            getPhoneArea(true)
                        });
                        return;
                    }
                    // if (!Constants.NGKM_CM_PHONE_REGEX.test(phoneNum)) {
                    //     tipsFather.find("div:first").html("非移动号码，可能发送不成功，请确认");
                    //     tipsFather.addClass("list-tel-warn");
                    // } else {
                    tipsFather.removeClass("list-tel-warn");
                    // }
                    Util.ajax.postJson(Constants.AJAXURL + '/sendSms/phoneAreaQuery', {telNum: phoneNum}, function (resultSms, isOkSms) {
                        if (isOkSms == true) {
                            var city;
                            var prov;
                            var flag = true;
                            if(resultSms.object){
                                var res = resultSms.object.split(",");
                                if(res.length == 2){
                                    city = res[0];
                                    prov = res[1];
                                }else{
                                    city = resultSms.object;
                                }
                            }
                            if (!regionSelect) {
                                var selectConfig = {
                                    el: "#smsRegion",
                                    topOption: "请选择",
                                    value: "",
                                    textField: "regionName",
                                    valueField: "regionId",
                                    datas: regionMap
                                };
                                regionSelect = new select(selectConfig);
                            }
                            for (var i = 0; i < regionMap.length; i++) {
                                if (regionMap[i].regionId == city) {
                                    regionSelect.setValue(['regionId', regionMap[i].regionId]);
                                    flag = false;
                                }
                            }
                            if (flag) {
                                for (var i = 0; i < regionMap.length; i++) {
                                    if (regionMap[i].regionId == prov) {
                                        regionSelect.setValue(['regionId', regionMap[i].regionId]);
                                        return;
                                    }
                                }
                                regionSelect.setValue(1);
                            }
                        } else {
                            //new myAlert({'type': 'confirm', 'text': resultSms.returnMessage, falseShow: false});
                            dialogNew.alert({type:'confirm',message:resultSms.returnMessage, falseShow: false});
                        }
                    })
                }, null, function () {
                    $("#telephone").bind('input propertychange', function () {
                        getPhoneArea(true)
                    });
                });
            });

            // 关闭弹出层
            $("#msgTitle > a,#cancel").click(function () {
                var $msgPop = $("#msgPop");
                if (isHall || isDisplay) {
                    $msgPop.remove();
                    // 弹窗删除 滚轮启用
                    $(".skin-dark").removeAttr("style");
                    isInit = true;

                    finalClear();
                } else {
                    // NGKM-558 0520 发送短信号码置空逻辑修改 -begin
                    var openMode = KmUtil.getOpenMode() || "1";
                    if ("2" == openMode && CrossAPI.url != undefined) {
                        CrossAPI.getContact("getClientBusiInfo", Constants.PARAMJSONBUSINFO, function (clientBusiInfo) {
                            phoneNumber = clientBusiInfo.bean.msisdn || "";
                            CrossAPI.getContact("getSerialNo", function (serialNo) {
                                // 保存上一通接触流水
                                if (serialNo) {
                                    $("#telephone").val(phoneNumber);
                                    $msgPop.hide();
                                } else {
                                    $("#telephone").val("");
                                    $msgPop.hide();
                                }
                            });
                        });
                    } else {
                        Util.ajax.getJson(Constants.AJAXURL + '/kmClient/getClientInfo' + "?t=" + new Date().getTime(), {}, function (data, state) {
                            if (state) {
                                if (data && data.bean && data.bean.msisdn) {
                                    phoneNumber = data.bean.msisdn;
                                }
                                // if (data && data.bean && data.bean.serialNo) {
                                // 保存上一通接触流水
                                if (data.bean.serialNo) {
                                    $("#telephone").val(phoneNumber);
                                    $msgPop.hide();
                                } else {
                                    $("#telephone").val("");
                                    $msgPop.hide();
                                }
                                // }
                            }
                        })
                    }
                    // NGKM-558 0520 发送短信号码置空逻辑修改 -end
                }

                // <editor-fold desc="ngkm_text_mes_usage 取消">
                var duration = (Date.parse(new Date()) - sensorMsgClickTimeStart)/1000;
                Util.ajax.getJson(Constants.AJAXURL + "/sensorsdata/getSensorsdata?t=" + +new Date().getTime(), {}, function (data) {
                    if (data.returnCode == 0 && data.object == "true") {
                        if (sensorsdata) {
                            sensorsdata.track("ngkm_text_mes_usage", {
                                $url: window.location.href,
                                model_name: sensorSendMsgPage,
                                end_type: '取消',
                                duration: duration
                            });
                        }
                    }
                });
                // </editor-fold>

            });
            $("#defaultBtn").click(function () {
                if (!defaultModel) {
                    $("input[name='check-style']:checked").trigger("click");
                    $("input[isDefault ='1']").each(function () {
                        var thisObj = $(this);
                        if (!thisObj.parent().hasClass("hide") && !thisObj.prop("checked"))
                            thisObj.trigger("click");
                    });
                    defaultModel = true;
                }
            });
            $("#customBtn").click(function () {
                if (defaultModel) {
                    defaultModel = false;
                    $("input[isDefault ='1']").each(function () {
                        var thisObj = $(this);
                        if (!thisObj.parent().hasClass("hide") && thisObj.prop("checked"))
                            thisObj.trigger("click");
                    });
                }
                if (Constants.SCENE_GOABROAD == templtId && customModel != 0) {
                    $("input[name ='check-style']").each(function () {
                        var thisObj = $(this);
                        if (!thisObj.parent().hasClass("hide") && thisObj.prop("checked"))
                            thisObj.trigger("click");
                    });
                    customModel = 0;
                }
            });
            $("#closeTip").on('click', function () {
                $(".km-alert-tip").addClass("hide");
            });
            $("#roamBtn").on('click', function () {
                if (customModel != 1) {
                    modeCheck = true;
                    $("input[name ='check-style']").each(function () {
                        var thisObj = $(this);
                        if (!thisObj.parent().hasClass("hide") && thisObj.prop("checked"))
                            thisObj.trigger("click");
                    });

                    var roamAtoms = Constants.ROAM_CUSTOMIZE;
                    for (var i = 0; i < roamAtoms.length; i++) {
                        $("input[tmpltAtomId=" + roamAtoms[i] + "]").trigger("click");
                    }
                    modeCheck = false;
                    customModel = 1;
                }
            });
            $("#directBtn").on('click', function () {
                if (customModel != 2) {
                    modeCheck = true;
                    $("input[name ='check-style']").each(function () {
                        var thisObj = $(this);
                        if (!thisObj.parent().hasClass("hide") && thisObj.prop("checked"))
                            thisObj.trigger("click");
                    });

                    var directAtoms = Constants.IDD_CUSTOMIZE;
                    for (var i = 0; i < directAtoms.length; i++) {
                        $("input[tmpltAtomId=" + directAtoms[i] + "]").trigger("click");
                    }
                    modeCheck = false;
                    customModel = 2;
                }
            });
            //点击授权短信tab
            $("#authorizeMsgSend").click(function () {
                checkTab = true;
                //预先清空选择
                $("input[name='chkThis']:checked").trigger("click");
                $("input[name='check-style']:checked").trigger("click");
                $("#messageInfo").html("");
                $("#messageLinkPreview").html("");
                $("#message").trigger("click");
                $("#send-msg-chat").hide();
                var authMidDiv = $("#authMidDiv");
                if (authMidDiv.length == 0) {
                    Util.ajax.getJsonAsync(Constants.AJAXURL + '/sendSms/getEmpowerSmsForDetail', {
                        knwlgId: klg_Id,
                        regnId: glbRegionId
                    }).done(function (data, state) {
                        if (state && data.returnCode == "0" && data.object) {
                            var smsList = data.object.smsList;
                            var authMsgCompileResult = Util.hdb.compile(authMsgTpl);
                            $("#commonMsgSend").parent().hasClass("active") ? $("#commonMsgSend").parent().removeClass("active") : false;
                            $("#authorizeMsgSend").parent().addClass("active");
                            $("#msgMidDiv").after(authMsgCompileResult(data.object));
                            authMidDiv.hasClass("hide") ? authMidDiv.removeClass("hide") : false;
                            $("#msgMidDiv").addClass("hide");
                            $("#defaultCheck").addClass("hide");

                            //为每条短信绑定事件
                            if (smsList) {
                                for (var i = 0; i < smsList.length; i++) {
                                    var smsId = smsList[i].smsId;
                                    $("#check_" + smsId).click(function () {
                                        this.checked = !this.checked;
                                    });
                                    $("#box_" + smsId).click(function () {
                                        var thisObj = $(this);
                                        if (thisObj.find(".feed-checkbox")[0].checked == false) {

                                            var atomIds = thisObj.find(".feed-checkbox").attr("atomIds");
                                            //此处校验卡片类型 如果是卡片类型 暂不支持发送短信
                                            Util.ajax.getJson(Constants.AJAXURL + '/empowerSms/getAtomParaType?atrrIds=' + atomIds, {}, function (data, state) {
                                                // 0 是非卡片
                                                if (state && data.returnCode == "0") {
                                                    checkboxFun(thisObj);
                                                    previewFun(thisObj);
                                                    smsIdNow = thisObj;
                                                } else {
                                                    new Dialog({
                                                        mode: 'tips',
                                                        tipsType: 'error',
                                                        content: '暂不支持卡片类型原子短信下发！'
                                                    });
                                                }
                                            })

                                        } else {
                                            checkboxFun(thisObj);
                                        }
                                        if ($("input[name='chkThis']:checked").length == 0) {
                                            smsIdNow = "";
                                            $("#messageInfo").html("");
                                            $("#messageLinkPreview").html("");
                                            $("#message").trigger("click");
                                        }
                                    });
                                }
                            }
                        } else {
                            dialogNew.alert({type: 'confirm',message:resultSms.returnMessage, falseShow: false})
                        }
                    }).fail(function (data, state) {
                        dialogNew.alert({type: 'confirm',message:resultSms.returnMessage, falseShow: false})
                    })
                } else {
                    $("#commonMsgSend").parent().hasClass("active") ? $("#commonMsgSend").parent().removeClass("active") : false;
                    $("#authorizeMsgSend").parent().addClass("active");
                    authMidDiv.hasClass("hide") ? authMidDiv.removeClass("hide") : false;
                    $("#msgMidDiv").addClass("hide");
                    $("#defaultCheck").addClass("hide");
                }
                checkTab = false;
            });
            //点击知识短信tab
            $("#commonMsgSend").click(function () {
                checkTab = true;
                //预先清空选择
                $("input[name='chkThis']:checked").trigger("click");
                $("input[name='check-style']:checked").trigger("click");
                $("#messageInfo").html("");
                $("#messageLinkPreview").html("");
                $("#message").trigger("click");

                $("#msgMidDiv").hasClass("hide") ? $("#msgMidDiv").removeClass("hide") : false;
                $("#authMidDiv").addClass("hide");
                $("#commonMsgSend").parent().addClass("active");
                $("#authorizeMsgSend").parent().hasClass("active") ? $("#authorizeMsgSend").parent().removeClass("active") : false;
                $("#defaultCheck").hasClass("hide") ? $("#defaultCheck").removeClass("hide") : false;
                $("#send-msg-chat").show();
                //重置为默认原子
                $("input[isDefault ='1']").each(function () {
                    var thisObj = $(this);
                    if (!thisObj.parent().hasClass("hide") && !thisObj.prop("checked"))
                        thisObj.trigger("click");
                });
                checkTab = false;
                //展示短信预览
                getMessageLink();
            })
        };

        //查询知识详情
        var getKnowledgeInfo = function (knwlgId) {
            klg_Id = knwlgId;
            // $("input[name='check-style']:checked").trigger("click");
            var attrDiv = $("#attrDiv");
            var config = {
                type: 'post',
                url: Constants.AJAXURL + '/knowledge/getGroupAndAtoms',
                data: {knwldgeId: klg_Id, verNo: ver_no},
                dataType: 'json', //返回值的数据类型
                async: true,
                success: function (data, textStatus) {
                    if (textStatus !== "success") {

                        attrDiv.length > 0 ? attrDiv.empty() : false;
                        regionSelect ? regionSelect.reload([]) : false;
                        closeCallBack();
                        return false;
                    }
                    if (data.returnCode !== '0') {
                        attrDiv.length > 0 ? attrDiv.empty() : false;
                        regionSelect ? regionSelect.reload([]) : false;
                        closeCallBack();
                        dialogNew.alert({type: 'confirm',message:resultSms.returnMessage, falseShow: false})
                        return false;
                    }
                    var dataObj = data.object;
                    if (dataObj === null || dataObj === undefined) {
                        attrDiv.length > 0 ? attrDiv.empty() : false;
                        regionSelect ? regionSelect.reload([]) : false;
                        closeCallBack();
                        dialogNew.alert({type: 'confirm',message:resultSms.returnMessage, falseShow: false})
                        return false;
                    }
                    klg_Nm = dataObj.knwlgNM;
                    klg_group = dataObj.knwldgGroupItems;
                    unrich(knwlgId);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $("#attrDiv").length > 0 ? $("#attrDiv").empty() : false;
                    regionSelect ? regionSelect.reload([]) : false;
                    closeCallBack();
                    dialogNew.alert({type: 'error',message:errorThrown})
                }
            };
            Util.ajax.ajax(config);
        };

        //非富化处理
        var unrich = function () {
            var groupData = JSON.stringify(klg_group);
            if (groupData != "") {
                Util.ajax.postJson(Constants.AJAXURL + '/knowledge/kmUnRichful', {
                    groupData: groupData,
                    knwlgId: klg_Id
                }, function (data) {
                    if (!regionMap || regionMap.length==0){
                        regionMap.push({'regionId': 'moren', 'regionName': '默认'});
                    }
                    if (data.returnCode == "0" && data.object && data.object.districtInfo) {
                        userProvInfo = data.object && data.object.userProvInfo;
                        var regnId = data.object.districtInfo.regnId;
                        var regnNm = data.object.districtInfo.regnNm;
                        klg_group = data.beans;
                        templtId = data.object.templateId;
                        if (data.object.districtInfo.regnId) {
                            regionMap = [];
                            regionMap.push({'regionId': regnId, 'regionName': regnNm});
                        } else {
                            var regionObj = data.object.regionMap;
                            for (key in regionObj) {
                                regionMap.push({'regionId': key, 'regionName': regionObj[key]});
                            }
                        }
                    } else {
                        $(klg_group).each(function () {
                            if ($(this.knwldgGroupItems2) && $(this.knwldgGroupItems2).length > 0) {
                                $(this.knwldgGroupItems2).each(function () {
                                    if (this.atrrItems && this.atrrItems.length > 0) {
                                        iterateAtrrItems(this.atrrItems);
                                    }
                                })
                            } else {
                                if (this.atrrItems && this.atrrItems.length > 0) {
                                    iterateAtrrItems(this.atrrItems);
                                }
                            }
                        })
                    }
                    //短信发送按钮权限校验
                    if (detailFlag){
                        $("#messageSendTop").attr("mo","000245008001001");
                        if($("#messageSendTopNew").length==0){
                            $("#messageSendTop").after(' <a href="javascript:void(0)" id="messageSendTopNew" class="msgButton" mo="000245005013"\n' +
                                '                   style="display: none">\n' +
                                '                    <i class="icon km-youjian"></i>发送短信\n' +
                                '                </a>')
                        }
                        if($("#messageSendTopRenew").length==0){
                            $("#messageSendTopNew").after(' <a href="javascript:void(0)" id="messageSendTopRenew" class="msgButton" mo="000245005014"\n' +
                                '                   style="display: none">\n' +
                                '                    <i class="icon km-youjian"></i>发送短信\n' +
                                '                </a>')
                        }
                        new btnAuthority($("body"),"",klg_Id);
                    }
                    compileTpl();
                });
            }
        };

        var iterateAtrrItems = function (items) {
            $(items).each(function () {
                if (this.exceptionMapList && this.exceptionMapList.length > 0) {
                    $(this.exceptionMapList).each(function () {
                        if ($.inArray(this.regnId, regionMap) == -1) {
                            regionMap.push({
                                'regionId': this.regnId,
                                'regionName': this.regnNm
                            });
                        }
                    });
                }
            })
        };

        //发送地域改变事件
        var regionChange = function (e, valueObj) {
            isChange = true;
            glbRegionId = valueObj.regionId;
            if (!$("#authorizeMsgSend").parent().hasClass("active")) {
                for (var i = 0; i < klg_group.length; i++) {
                    if (klg_group[i].knwldgGroupItems2.length > 0) {
                        for (var j = 0; j < klg_group[i].knwldgGroupItems2.length; j++) {
                            getExceptValue(klg_group[i].knwldgGroupItems2[j].atrrItems);
                        }
                    } else {
                        getExceptValue(klg_group[i].atrrItems);
                    }
                }
                if (defaultModel && !knlgCntt[klg_Id]) {
                    $("input[isDefault ='1']").each(function () {
                        var thisObj = $(this);
                        if (!thisObj.parent().hasClass("hide") && !thisObj.prop("checked"))
                            thisObj.trigger("click");
                    });
                    getMessageLink();
                } else {
                    var customBtn = $("#customBtn");
                    var defaultBtn = $("#defaultBtn");
                    if (isKnlgChange && ifDefault[klg_Id] != undefined) {
                        if (ifDefault[klg_Id] == false && !customBtn.prop("checked") && defaultBtn.prop("checked")) {
                            customBtn.prop("checked", true);
                            defaultBtn.prop("checked", false);
                            defaultModel = false;
                        } else if (ifDefault[klg_Id] == true && customBtn.prop("checked") && !defaultBtn.prop("checked")) {
                            customBtn.prop("checked", false);
                            defaultBtn.prop("checked", true);
                        }
                    } else if (defaultModel && !isChange) {
                        defaultModel = false;
                        customBtn.prop("checked", true);
                        defaultBtn.prop("checked", false);
                    } else if (Constants.SCENE_GOABROAD == templtId && !isChange && !modeCheck) {
                        customBtn.prop("checked", true);
                        defaultBtn.prop("checked", false);
                    }
                    getMessageLink();
                }
            } else if (smsIdNow != "") {
                previewFun(smsIdNow);
            }
            isChange = false;
        };

        //知识的切换
        var knowledgeChange = function (e, valueObj) {
            if(e){
                klgIndex=$(e.currentTarget).parent().parent().children().index($(e.currentTarget).parent());
            }
            //主动切换时初始化多个属性
            isKnlgChange = true;
            var checkedArray = [];

            $("input[name='check-style']:checked").each(function () {
                if ($(this).attr("atomId")) {
                    checkedArray.push($(this).attr("atomId"));
                }
            });
            //记录切换知识前选择的原子
            knlgCntt[klg_Id] = checkedArray;
            if ($("#messageInfo").find('li[klgid='+klg_Id+']').length > 0 ){
                msgCntt[klg_Id] = $("#messageInfo").find('li[klgid='+klg_Id+']').html().replace(/<br>/gi, "");
            }
            ifDefault[klg_Id] = $("#defaultBtn").prop("checked");
            if (klg_Id != valueObj) {
                regionMap = [];
                getKnowledgeInfo(valueObj);
            } else {
                if (isKnlgChange) {
                    checkLastCntt();
                    isKnlgChange = false;
                }
            }
        };

        //例外的展示
        var getExceptValue = function (atrrItems) {
            if (atrrItems) {
                for (var j = 0; j < atrrItems.length; j++) {
                    var atomId = atrrItems[j].knwlgAttrAtomId;
                    var atomIput = $('input[atomId=' + atomId + ']');
                    var morenTag = atomIput.parent().find("input:first");
                    var excpTag = atomIput.parent("span[isSendMes='1']").find("input[regnId=" + glbRegionId + "]");
                    var excpTag2 = atomIput.parent("span[isSendMes='2']").find("input[regnId=" + glbRegionId + "]");

                    if (excpTag.length == 0 && excpTag2.length == 0) {
                        if (morenTag.attr("isSendMes") == "1" && morenTag.parent().hasClass("hide")) {
                            morenTag.parent().removeClass("hide");
                        } else if (morenTag.attr("isSendMes") == "0" || morenTag.attr("isSendMes") == "2" || morenTag.attr("isSendMes") == "" && !morenTag.parent().hasClass("hide")) {
                            morenTag.parent().addClass("hide");
                            changeAllItems(morenTag.parent().find("input[name=check-style]").attr("atomId"), false);
                        }
                    } else if (excpTag.length > 0) {
                        if (excpTag.attr("isSendMes") == "1" && excpTag.parent().hasClass("hide")) {
                            excpTag.parent().removeClass("hide");
                        } else if (excpTag.attr("isSendMes") == "0" || excpTag.attr("isSendMes") == "2" || excpTag.attr("isSendMes") == "" && !excpTag.parent().hasClass("hide")) {
                            excpTag.parent().addClass("hide");
                            changeAllItems(excpTag.parent().find("input[name=check-style]").attr("atomId"), false);
                        }
                    } else if (excpTag2.length > 0) {
                        if (excpTag2.attr("isSendMes") == "1" && excpTag2.parent().hasClass("hide")) {
                            excpTag2.parent().removeClass("hide");
                        } else if (excpTag2.attr("isSendMes") == "0" || excpTag2.attr("isSendMes") == "2" || excpTag2.attr("isSendMes") == "" && !excpTag2.parent().hasClass("hide")) {
                            excpTag2.parent().addClass("hide");
                            changeAllItems(excpTag2.parent().find("input[name=check-style]").attr("atomId"), false);
                        }
                    }
                }
            }
        }
        var judgeQaAtom = function($obj){
            if(tmpltId == Constants.NGKM_QA_TMPLT_ID){
                var groupNm = $obj.parent().prevAll("h3").text();
                if(groupNm && groupNm.indexOf(Constants.NGKM_QA_TMPLT_GROUP_NM) == 0){
                    return true;
                }
            }
        };

        var getOther = function($obj, parentClass, otherClass, onlyTag){
            var others = $obj.parents("." + parentClass).find("." + otherClass + ":visible");
            if(others && others.length > 0){
                var tag = $obj.attr(onlyTag);
                for(var i = 0; i < others.length; i ++){
                    if($(others[i]).attr(onlyTag) == tag){
                        others.splice(i, 1);
                        break;
                    }
                }
            }
            return others;
        };
        var compileTpl = function () {
            Util.ajax.getJson(Constants.AJAXURL + "/smsTmplt/getSmsSuffixState", {}, function (data) {
                if (data.returnCode == 0) {
                    smsSuffixState = data.object;
                    getSmsTemp();
                }else {
                   /* new Dialog({
                        mode: 'tips',
                        tipsType: 'error',
                        content: data.returnMessage
                    });*/
                    dialogNew.alert({type:'error',message: data.returnMessage});
                }
            });
            var getSmsTemp = function () {
                var tempStr  = "NGKM.PARAM.CONFIG.MSG_TEMP";
                if(smsSuffixState == 0){
                    tempStr = "NGKM.PARAM.CONFIG.MSG_SUFFIX";
                }else if(smsSuffixState == 1 ){
                    tempStr ="NGKM.PARAM.CONFIG.MSG_TEMP"
                }
                if (isHall && $('body').attr('isClose') == 'y') {

                    return true;
                }
                /*获取短信模板*/
                Util.ajax.getJson(Constants.AJAXURL + '/kmConfig/getDataByCode?codeTypeCd=' + tempStr + "&" + new Date().getTime(),
                    {}, function (templateData, isOkTemplateData) {
                        if (isOkTemplateData == true) {
                            if (templateData.object == null) {
                                return;
                            }
                            if (templateData.beans == null) {

                                return;
                            }
                            var jsonObj = templateData.beans;
                            var resultObj = new Object;
                            resultObj.msgTemplate = jsonObj;
                            resultObj.knwldgGroupItems = klg_group;
                            if (isHall){
                                var compileResult = $(Util.hdb.compile(tplNew)(resultObj));
                            } else {
                                var compileResult = $(Util.hdb.compile(tpl)(resultObj));
                            }
                            if ($("#msgPop").length == 0) {
                                $("body").append(compileResult);
                            } else {
                                $(".msg-send-middle").html(compileResult.find(".msg-send-middle").html());
                            }
                            var attrDivs = $("#attrDiv").find('div.list-checkbox');
                            for (var i = 0; i < attrDivs.length; i++) {
                                var attrDivsSpans = $(attrDivs[i]).children('span');
                                for (var j = 0; j < attrDivsSpans.length; j++) {
                                    if ('1' == $(attrDivsSpans[j]).attr('issendmes')) {
                                        if ($($(attrDivsSpans[j]).find('label')).text().indexOf('开通方式-H5') != -1) {
                                            $($(attrDivsSpans[j]).find('label')).append("<em class=\"special2\"><i class=\"icon km-tuijian\"></i></em>");
                                            if($("#alertinfo").length == 0){
                                                $(attrDivs[i]).children('h3').after("<div class=\"km-alert-tip\" id=\"alertinfo\" style=\"padding: 4px 4px 4px 26px; position: absolute; left: 110px; top: -6px; background-position: 6px 6px;\">\n" +
                                                    "                  为方便客户自助办理业务，建议勾选“开通方式-H5”。\n" +
                                                    "                </div>");
                                                $(attrDivs[i]).attr('style','position:relative;');
                                            }

                                        }
                                        if ($($(attrDivsSpans[j]).find('label')).text().indexOf('开通方式-中国移动App') != -1) {
                                            $($(attrDivsSpans[j]).find('label')).append("<em class=\"special2\"><i class=\"icon km-tuijian\"></i></em>");
                                            if($("#alertinfo").length == 0){
                                                $(attrDivs[i]).children('h3').after("<div class=\"km-alert-tip\" id=\"alertinfo\" style=\"padding: 4px 4px 4px 26px; position: absolute; left: 110px; top: -6px; background-position: 6px 6px;\">\n" +
                                                    "                  为方便客户自助办理业务，建议勾选“中国移动App”。\n" +
                                                    "                </div>");
                                                $(attrDivs[i]).attr('style','position:relative;');
                                            }

                                        }
                                    }
                                }
                            }
                            if(selectAtomIds){
                                //重新选中内容
                                var checkBox = $("div.list-checkbox").children("span").find("input[name='check-style']");
                                for(var i = 0; i < selectAtomIds.length; i ++){
                                    for (var j = checkBox.length - 1; j >= 0; j--) {
                                        if ($(checkBox[j]).attr("atomId") == selectAtomIds[i]) {
                                            checkBox[j].checked = true;
                                        }
                                    }
                                }
                                selectAtomIds = null;
                            }

                            doXjhbuss();

                            //服务助手详情页面选中原子
                            if (isDisplay) {
                                $("#authorizeMsgSend").parent().hide();//隐藏授权短信
                                var atomList = atomIds;
                                var checkBox = $("div.list-checkbox").children("span").find("input[name='check-style']");
                                for (var i = 0; i < atomList.length; i++) {
                                    var atomItem = $(atomList[i]);
                                    atomItem.addClass("selected");
                                    for (var j = checkBox.length - 1; j >= 0; j--) {
                                        if ($(checkBox[j]).attr("atomId") == atomItem) {
                                            checkBox[j].checked = true;
                                            changeAllItems(atomItem, "true");
                                        }
                                    }
                                }
                                // $(this).addClass("chked");
                            }
                            //营业厅下显示下拉框
                            if (isHall) {
                                $("#authorizeMsgSend").parent().hide();
                                $(".km-title-newchange").removeClass("hide");
                            }

                            //隐藏不可发送原子
                            $('.tipw-check[isSendMes="2"]').addClass("hide");
                            $('.tipw-check[isSendMes=""]').addClass("hide");
                            $('.tipw-check[isSendMes="0"]').addClass("hide");

                            //场景为国家及地区时
                            if (Constants.SCENE_GOABROAD == templtId) {
                                $("#defaultCheck").empty();
                                $("#defaultCheck").prepend("<label for=\"roamBtn\">\n" +
                                    "                            <input name=\"kkk\" id=\"roamBtn\" type=\"radio\" checked=\"true\"> 国际漫游\n" +
                                    "                        </label>\n" +
                                    "                        <label for=\"directBtn\">\n" +
                                    "                            <input name=\"kkk\" id=\"directBtn\" type=\"radio\"> 国际长途\n" +
                                    "                        </label>" +
                                    "                        <label for=\"customBtn\">\n" +
                                    "                            <input name=\"kkk\" id=\"customBtn\" type=\"radio\"> 自定义\n" +
                                    "                        </label>");
                            }
                            var isTrigger = function(e){
                                if(e && e.pageX == 0 && e.pageY == 0){

                                    return true;
                                }
                            };

                            //添加选中事件
                            $(".message-add").on('click', function (e) {
                                var thisObj = $(this);
                                var customBtn = $("#customBtn");
                                var defaultBtn = $("#defaultBtn");
                                if(judgeQaAtom(thisObj) && !isTrigger(e)){
                                    var others = getOther(thisObj, "list-checkbox", "message-add", "id");
                                    if(others){
                                        for(var i = 0; i < others.length; i ++){
                                            if (thisObj[0].checked && !$(others[i])[0].checked) {
                                                $(others[i]).trigger("click");
                                            }else if (!thisObj[0].checked && $(others[i])[0].checked) {
                                                $(others[i]).trigger("click");
                                            }
                                        }
                                    }
                                }
                                if (this.checked == true) {

                                    //卡片类型原子暂不支持勾选
                                    if ($(this).attr('datatype') == "22") {
                                        new Dialog({
                                            mode: 'tips',
                                            tipsType: 'error',
                                            content: '暂不支持卡片类型原子短信下发！'
                                        });
                                        changeAllItems(thisObj.attr("atomId"), "false");
                                        changeDisplayIcon(thisObj.attr("atomId"), "true");
                                        return;
                                    }
                                    // NGKM2019-452 -begin
                                    if (thisObj.next().text().indexOf("开通-自助办理") != -1) {
                                        var mobile = trim($("#telephone").val());
                                        var productCode;
                                        if('moren' == glbRegionId){
                                            productCode = thisObj.siblings("input[regnId=moren]")[0].defaultValue;
                                        }else{
                                            productCode = thisObj.siblings("input[regnId=" + glbRegionId + "]")[0].defaultValue;
                                        }
                                        if(productCode == null || productCode == undefined || productCode ==''){
                                            thisObj.siblings("input[regnId=moren]")[0].value = "";
                                            changeAllItems(thisObj.attr("atomId"), "true");
                                            changeDisplayIcon(thisObj.attr("atomId"), "false");
                                        }else{
                                            var config = {
                                                type: 'get',
                                                url: Constants.AJAXURL + '/sendSms/getProductPageURLByProductCode',
                                                data: {
                                                    mobile: mobile,
                                                    productCode: productCode // 商品ID
                                                },
                                                dataType: 'json',
                                                success: function (data) {
                                                    if (data.returnCode == '0') {
                                                        // var productNm = data.object.productName;
                                                        var productPageURL = data.object.url;
                                                        bizSerialNo = data.object.seqNo;
                                                        if(productPageURL){
                                                            if('moren' == glbRegionId){
                                                                thisObj.siblings("input[regnId=moren]")[0].value = "可根据短信链接自助办理业务：" + productPageURL + " ";
                                                            }else{
                                                                thisObj.siblings("input[regnId=" + glbRegionId + "]")[0].value = "可根据短信链接自助办理业务：" + productPageURL + " ";
                                                            }

                                                            changeAllItems(thisObj.attr("atomId"), "true");
                                                            changeDisplayIcon(thisObj.attr("atomId"), "false");
                                                        } else {
                                                            /*new Dialog({
                                                                mode: 'tips',
                                                                tipsType: 'error',
                                                                content: '新电商办理链接获取失败，请重新勾选原子',
                                                                height: 20
                                                            });*/
                                                            dialogNew.alert({type:'error',message:'新电商办理链接获取失败，请重新勾选原子'});
                                                            changeAllItems(thisObj.attr("atomId"), "false");
                                                            changeDisplayIcon(thisObj.attr("atomId"), "true");
                                                            return false;
                                                        }
                                                    } else {
                                                       /* new Dialog({
                                                            mode: 'tips',
                                                            tipsType: 'error',
                                                            content: data.returnMessage,
                                                            height: 20
                                                        });*/
                                                        dialogNew.alert({type:'error',message:data.returnMessage});
                                                        changeAllItems(thisObj.attr("atomId"), "false");
                                                        changeDisplayIcon(thisObj.attr("atomId"), "true");
                                                        return false;
                                                    }
                                                },
                                                error: function (jqXHR, textStatus, errorThrown) {
                                                    //new MyAlert({'type': 'error', 'text': errorThrown});
                                                    dialogNew.alert({type:'error',message:errorThrown});

                                                }
                                            };
                                            Util.ajax.ajax(config);
                                        }


                                    }else{
                                        changeAllItems(thisObj.attr("atomId"), "true");
                                        changeDisplayIcon(thisObj.attr("atomId"), "false");
                                    }
                                    // NGKM2019-452 -end

                                    // changeAllItems(thisObj.attr("atomId"), "true");
                                    // changeDisplayIcon(thisObj.attr("atomId"), "false");
                                } else {
                                    changeAllItems(thisObj.attr("atomId"), "false");
                                    changeDisplayIcon(thisObj.attr("atomId"), "true");
                                }

                                if (isKnlgChange && ifDefault[klg_Id] != undefined) {
                                    //营业厅切换时
                                    if (ifDefault[klg_Id] == false && !customBtn.prop("checked") && defaultBtn.prop("checked")) {
                                        customBtn.prop("checked", true);
                                        defaultBtn.prop("checked", false);
                                        defaultModel = false;
                                    } else if (ifDefault[klg_Id] == true && customBtn.prop("checked") && !defaultBtn.prop("checked")) {
                                        customBtn.prop("checked", false);
                                        defaultBtn.prop("checked", true);
                                    }
                                } else if (defaultModel && !isChange) {
                                    //普通知识点击
                                    defaultModel = false;
                                    customBtn.prop("checked", true);
                                    defaultBtn.prop("checked", false);
                                } else if (Constants.SCENE_GOABROAD == templtId && !isChange && !modeCheck) {
                                    customBtn.prop("checked", true);
                                    defaultBtn.prop("checked", false);
                                    customModel = 0;
                                }
                            });

                            $(".tipw-check").children("input[name='check-style']").each(function () {
                                var thisObj = $(this);
                                if (thisObj.attr("dataType") == "4" || thisObj.attr("dataType") == "13") {
                                    thisObj.next().append("<em class=\"special\"><i class=\"icon km-link\"></i></em>")
                                }
                                if (thisObj.attr("isDefault") == "1" && Constants.SCENE_GOABROAD != templtId) {
                                    if (!hasDefault) {
                                        hasDefault = true;
                                    }
                                }
                            });
                            if (hasDefault) {
                                defaultModel = true;
                                $("#defaultBtn").prop("checked", true);
                                $("#customBtn").prop("checked", false);
                                if (knlgCntt[klg_Id] && knlgCntt[klg_Id].length == 0) {
                                    defaultModel = false;
                                    $("#defaultBtn").prop("checked", false);
                                    $("#customBtn").prop("checked", true);
                                }
                            }

                            $("#message").on('click', function () {
                                var label = $(this).parent().parent().find("li:first");
                                label.addClass("active");
                                label.siblings(":first").removeClass("active");
                                label.parent().siblings(":first").find("li:first").addClass("selected");
                                if (isHall){
                                    label.parent().siblings(":first").find(".hallLink").removeClass("selected");
                                } else{
                                    label.parent().siblings(":first").find("li:eq(1)").removeClass("selected");
                                }
                            });
                            $("#link").on('click', function () {
                                var label = $(this).parent().parent().find("li:eq(1)");
                                label.addClass("active");
                                label.siblings(":first").removeClass("active");
                                label.parent().siblings(":first").find("li:first").removeClass("selected");
                                if (isHall){
                                    label.parent().siblings(":first").find(".hallLink").addClass("selected");
                                } else{
                                    label.parent().siblings(":first").find("li:eq(1)").addClass("selected");
                                }
                            });

                            //添加窗口事件
                            $(".close").click(function () {
                                gisParam = [];
                                klgIndex = 0;
                                var $msgPop = $("#msgPop");
                                if (isHall || isDisplay) {
                                    $msgPop.remove();
                                    // 弹窗删除 滚轮启用
                                    $(".skin-dark").removeAttr("style");
                                    isInit = true;

                                    finalClear();
                                } else {
                                    // NGKM-558 0520 发送短信号码置空逻辑修改 -begin
                                    var openMode = KmUtil.getOpenMode() || "1";
                                    if ("2" == openMode && CrossAPI.url != undefined) {
                                        CrossAPI.getContact("getClientBusiInfo", Constants.PARAMJSONBUSINFO, function (clientBusiInfo) {
                                            phoneNumber = clientBusiInfo.bean.msisdn || "";
                                            CrossAPI.getContact("getSerialNo", function (serialNo) {
                                                // 保存上一通接触流水
                                                if (serialNo) {
                                                    $("#telephone").val(phoneNumber);
                                                    $msgPop.hide();
                                                } else {
                                                    $("#telephone").val("");
                                                    $msgPop.hide();
                                                }
                                            });
                                        });
                                    } else {
                                        Util.ajax.getJson(Constants.AJAXURL + '/kmClient/getClientInfo' + "?t=" + new Date().getTime(), {}, function (data, state) {
                                            if (state) {
                                                if (data && data.bean && data.bean.msisdn) {
                                                    phoneNumber = data.bean.msisdn;
                                                }
                                                // if (data && data.bean && data.bean.serialNo) {
                                                // 保存上一通接触流水
                                                if (data.bean.serialNo) {
                                                    $("#telephone").val(phoneNumber);
                                                    $msgPop.hide();
                                                } else {
                                                    $("#telephone").val("");
                                                    $msgPop.hide();
                                                }
                                                // }
                                            }
                                        })
                                    }
                                    // NGKM-558 0520 发送短信号码置空逻辑修改 -end
                                }

                                // <editor-fold desc="ngkm_text_mes_usage 右上角X">
                                var duration = (Date.parse(new Date()) - sensorMsgClickTimeStart)/1000;
                                Util.ajax.getJson(Constants.AJAXURL + "/sensorsdata/getSensorsdata?t=" + +new Date().getTime(), {}, function (data) {
                                    if (data.returnCode == 0 && data.object == "true") {
                                        if (sensorsdata) {
                                            sensorsdata.track("ngkm_text_mes_usage", {
                                                $url: window.location.href,
                                                model_name: sensorSendMsgPage,
                                                end_type: '右上角X',
                                                duration: duration
                                            });
                                        }
                                    }
                                });
                                if (isHall){
                                    isDom = false;
                                    num = 0;
                                }
                                // </editor-fold>

                            });
                            $("#messageTemplate").on('change', buildTemplate);
                            getAcceptNumber();
                            eventInitAttr();
                            $("#roamBtn").trigger("click");

                            //获取是否为节假日
                            Util.ajax.postJson(Constants.AJAXURL + '/knowledge/kmBasisJudgeHoliday', {}, function (data) {
                                if (data.returnCode == "0") {
                                    if (data.object == false) {
                                        $("#messageTemplate option:first").prop('selected', 'selected');
                                        $("#messageTemplate option:eq(1)").removeProp('selected');
                                    } else {
                                        $("#messageTemplate option:eq(1)").prop('selected', 'selected');
                                        $("#messageTemplate option:first").removeProp('selected');
                                    }
                                } else {
                                    dialog.alert({type:'error',message:data.returnMessage});
                                }
                            });
                            Util.ajax.getJson(Constants.AJAXURL + '/kmConfig/getUserInfo' + "?" + new Date().getTime(), {}, function (result, isOk) {
                                if (isOk == true) {
                                    var userProvCode = result.bean.scope;
                                    //获取自定义模板
                                    Util.ajax.postJsonAsync(Constants.AJAXURL + '/sendSms/getSmsTemplate',
                                        {
                                            knwlgId: klg_Id,
                                            userScope: userProvCode
                                        }).done(function (data, state) {
                                        if (data && data.object && data.object.smsTmplts) {
                                            sortAndAddTmplt(data.object.smsTmplts);
                                            excpChangeSelect(userProvCode);
                                            return;
                                        }
                                        tmpltFaildChange();
                                        excpChangeSelect(userProvCode);
                                        return;
                                    }).fail(function (data, state) {
                                        tmpltFaildChange();
                                        excpChangeSelect(userProvCode);

                                        return;
                                    })

                                }
                            })
                            //查询原子名称配置
                            Util.ajax.postJson(Constants.AJAXURL + '/knowledge/kmSmsCnttAtomNmsConfig', {}, function (data) {
                                if (data.returnCode == "0" && data.object) {
                                    atomNames = data.object;
                                }
                            });
                            if (isHall || isDisplay) {
                                refresh();
                            }
                            //弹窗展示后 滚轮禁用
                            // $(".skin-dark").bind('mousewheel', function(event, delta) {return false;});
                            $(".skin-dark").css("height","100%");
                            $(".skin-dark").css("overflow","hidden");
                            // 初始化 短信预览 条数信息
                            var length = knwlgMap.length;
                            if(isInit && isHall){
                                isInit= false;
                                $("#message").html("短信预览("+length+")");
                            }
                        }
                        contactId = "1000001";

                        if ("2" == window.localStorage.getItem("openMode") && CrossAPI.url != undefined) {
                            CrossAPI.getContact("getCallingInfo",Constants.PARAMJSONCALL, function (CallingInfo) {
                                if (CallingInfo != undefined && CallingInfo != null && CallingInfo.contactId != undefined && CallingInfo.contactId != null) {
                                    contactId = CallingInfo.contactId
                                }
                            });
                        }
                    })
            }

        };

        var isArray = function (str) {
            return Object.prototype.toString.call(str) == "[object Array]";
        };
        //短信构造函数
        var messageSend = function (klgId, verno, groups, knwlgNM, closeFunc, templateId) {
            tmpltId = templateId;
            if (closeFunc != null) {
                if (isArray(closeFunc)) {
                    atomIds = closeFunc;
                    isDisplay = true;
                    closeCallBack = function () {
                        isDisplay = true;
                    }
                } else {
                    closeCallBack = closeFunc;
                }
            }
            if (groups) {
                klg_Id = klgId;
                ver_no = verno;
                klg_Nm = knwlgNM;
                klg_group = groups;
                detailFlag = true;
                unrich();
            } else {
                Util.hdb.registerHelper("equal", function (v1, v2, options) {
                    if (v1 === v2) {
                        return options.fn(this);
                    } else {
                        return options.inverse(this);
                    }
                });
                $('body').attr('isClose','n');
                isHall = true;
                knwlgIdArray = klgId.split(",");
                klgNmArray = knwlgNM.split("##");
                knwlgMap = [];
                if (knwlgIdArray.length > 0 && klgNmArray.length > 0) {
                    for (var i = 0; i < knwlgIdArray.length; i++) {
                        knwlgMap.push({"knwlgId": knwlgIdArray[i], "knwlgName": klgNmArray[i]});
                    }
                }
                if (knwlgMap.length == 1){
                    nameSpan = 1;
                }
                isDom  = true;
                getKnowledgeInfo(knwlgIdArray[0]);
            }
            getMsgConfig();
        };

        var getMsgConfig = function (){
            Util.ajax.getJson(Constants.AJAXURL+"/msgConfig/getMsgConfig",{},function(data){
                if(data && data.object){
                    showFlag = data.object.showFlag == 1;
                }
            });
        }
        //Added by wangxl on 2018.7.3   图片放大预览
        var previewPic = function () {
            //图片放大
            $("#msgPop .narrow").click(function () {
                var wHeight = $(window).height() - 100;
                var wWidth = $(window).width() - 100;
                $("#img-content").show();
                $("#img-inner").append("<img id='my-img' src='" + $(this).attr("src") + "' style='visibility: hidden'>");
                $("#my-img").load(function () {
                    var thisObj = $(this);
                    var iHeight = thisObj.height();
                    var iWidth = thisObj.width();
                    if (iHeight > wHeight) {
                        iWidth = (wHeight / iHeight) * iWidth;
                        iHeight = wHeight;
                    }
                    if (iWidth > wWidth) {
                        iHeight = (wWidth / iWidth) * iHeight;
                        iWidth = wWidth;
                    }
                    thisObj.removeAttr("style");
                    var top = (wHeight - iHeight) / 2 + 50;
                    //var left = (wWidth - iWidth) / 2 + 50;
                    thisObj.css({width: iWidth + "px", height: iHeight + "px", top: top + "px"});
                    thisObj.css("margin-top", top + "px");
                    thisObj.css("z-index", '1112');
                    /*$("#img-close").css({top: (top - 25) + "px", left: (left + iWidth - 25) + "px"});*/
                    $('#img-content').css("z-index", "1111");
                    /*$('#img-content').find('.popup-overlay').css("z-index", "1111");*/
                    $('#img-close').css("z-index", "1113");
                });
            });

            //放大图片关闭
            $("#img-close").click(function () {
                $("#img-content").hide();
                $("#my-img").remove();
                return false;
            });
        };

        var finalClear = function () {
            regionMap = [];
            closeCallBack();
            once = true;
            klg_group = [];
            knwlgMap = [];
            klgIdArr = [];
            klgNmArr = [];
            msgCnttArr = [];
            msgCntt = {};
            knwlgIdArray = [];
            klgNmArray = [];
            ifDefault = {};
            knlgCntt = {};
            isDom = false;
            nameSpan = 0;
            num = 0;
            klgIndex=0;
            regionSelect = null;
            $("body").attr('isClose',"y");
        };

        //缩略图功能事件
        var messThumbnailEvent = function () {
            var thumbnailDivDom = $("#messageLinkPreview .thumbnailDiv");
            $("#messageLinkPreview img.thumbnailPlus").each(function () {
                var thisObj = $(this);
                var src = thisObj.attr("src");
                if (src) {
                    thisObj.attr("src", src.replace("skin/blue2/thumbnailPlus", url_prefix+"/assets/img/thumbnailPlus"));
                }
                //图标添加点击事件
                thisObj.click(function () {
                    var src = thisObj.attr("src");
                    var id = thisObj.attr("id");
                    if (src && src.indexOf("thumbnailPlus") != -1) {
                        thisObj.attr("src", url_prefix+"/assets/img/thumbnailMinus.png");
                        $('#messageLinkPreview #' + id + "_div").show();
                        thumbnailDivDom.css('padding', '10px');
                    } else {
                        thisObj.attr("src", url_prefix+"/assets/img/thumbnailPlus.png");
                        $('#messageLinkPreview #' + id + "_div").hide();
                    }
                })
            });

            thumbnailDivDom.hide();

        };
        //预览参数准备
        var previewFun = function (obj) {
            var atomIds = obj.find(".feed-checkbox").attr("atomIds");
            var param = {
                atrrIds: atomIds,
                knwlgId: klg_Id,
                glbRegionId: glbRegionId,
                rootURL: rootURL,
                isEmpower: "0"
            };
            singlePreview(param);
        };
        //发送参数准备
        var checkboxFun = function (obj) {
            var smsId = obj.attr("id").split("_")[1];
            var atomIds = obj.find(".feed-checkbox").attr("atomIds");
            var smsTit = trim(obj.find("p").html());
            var relateId = obj.find(".feed-checkbox").attr("relateId");// 0412 Added by lizh23
            if (obj.find(".feed-checkbox")[0].checked == false) {
                obj.find(".feed-checkbox")[0].checked = true;
                atomIdArray.push(atomIds);
                smsTitleArray.push(smsTit);
                msgIdArray.push(smsId);
                relateIds.push(relateId); // 0412 Added by lizh23
            } else {
                obj.find(".feed-checkbox")[0].checked = false;
                if ($.inArray(atomIds, atomIdArray) != -1) {
                    atomIdArray.splice($.inArray(atomIds, atomIdArray), 1);
                }
                if ($.inArray(smsTit, smsTitleArray) != -1) {
                    smsTitleArray.splice($.inArray(smsTit, smsTitleArray), 1);
                }
                if ($.inArray(smsId, msgIdArray) != -1) {
                    msgIdArray.splice($.inArray(smsId, msgIdArray), 1);
                }
                if ($.inArray(relateId, relateIds) != -1) { // 0412 Added by lizh23
                    relateIds.splice($.inArray(relateId, relateIds), 1);
                }
            }
        };
        //授权短信预览函数
        var singlePreview = function (param) {
            Util.ajax.getJsonAsync(Constants.AJAXURL + '/empowerSms/getAtomCntt', param).done(function (data, state) {
                var messageInfo = $("#messageInfo");
                var messageLinkPreview = $("#messageLinkPreview");
                messageInfo.html("");
                messageLinkPreview.html("");
                $("#message").trigger("click");
                if (state && data.returnCode == "0") {
                    if (data && data.object) {
                        if (data.object.linkContent) {
                            messageLinkPreview.html(data.object.linkContent);
                        } else {
                            messageLinkPreview.html("");
                        }
                        var smsNm = data.object.smsNm;
                        if (data.object.isBusiHall && data.object.point_info) {
                            var gis={};
                            gis.endNm=data.object.knwlgNm;
                            gis.bMLat=data.object.point_info.lat;
                            gis.bMLng=data.object.point_info.lon;
                            gis.aDDR="";
                            gis.gMLat;
                            gis.gMLng;
                            // 百度坐标转高德坐标
                            if (!gis.gMLat || !gis.gMLng) {
                                var points = [gis.bMLng + "," + gis.bMLat];
                                Util.ajax.ajax({
                                    type: 'get',
                                    url: Constants.AJAXURL + '/businessHall/convertor?v=' + new Date().getTime(),
                                    data: {"point": gis.bMLng + "," + gis.bMLat},
                                    dataType: 'json', //返回值的数据类型
                                    async: false,
                                    success: function (data) {
                                        if (data && data.returnCode == 0) {
                                            var locations = data.object;
                                            var arr = locations.split(",");
                                            console.info("web版:" + points[0] + "转换结果:[" + locations + "]");
                                            console.info("转换结果:经度" + arr[0] + ",纬度" + arr[1]);
                                            gis.gMLng = arr[0];
                                            gis.gMLat = arr[1];
                                        }
                                    }
                                })
                            }
                            Util.ajax.ajax({
                                type: 'get',
                                url: Constants.AJAXURL + '/knowledge/KmGISMessageGen?v=' + new Date().getTime(),
                                data: gis,
                                dataType: 'json', //返回值的数据类型
                                async: false,
                                success: function (data) {
                                    if (data.object == null) {
                                        dialogNew.alert({type:'error',message: data.returnMessage});
                                        return false;
                                    }
                                    if ("" != data.returnMessage) {
                                        dialogNew.alert({type:'error',message: data.returnMessage});
                                        return false;
                                    }
                                    //$("#messageLink").val(config.basicCon +"<br/>" + data.object.msg);
                                    if (smsNm) {
                                        smsNm=smsNm.replace("【中国移动】","");
                                        var smsNmArr = smsNm.split("<br/>");
                                        var newSmsNm = "";
                                        for (var i = 0; i<smsNmArr.length;i++){
                                            if (smsNmArr[i].indexOf("【GIS经纬度】") != -1){
                                                if (i == smsNmArr.length-1) {
                                                    newSmsNm += data.object.msg + "【中国移动】";
                                                }else {
                                                    newSmsNm += data.object.msg+"<br/>";
                                                }
                                            } else {
                                                if (i == smsNmArr.length-1) {
                                                    newSmsNm += smsNmArr[i] + "【中国移动】";
                                                }else {
                                                    newSmsNm += smsNmArr[i]+"<br/>";
                                                }
                                            }
                                        }
                                        messageInfo.html(newSmsNm);
                                    } else {
                                        messageInfo.html("");
                                    }
                                    $("#message").trigger("click");
                                    buildTemplate();
                                    previewPic();
                                }
                            })
                        }else{
                            if (smsNm) {
                                var smsComtent=smsNm.replace("【中国移动】",navUrl+"【中国移动】");
                                messageInfo.html(smsComtent);
                            } else {
                                messageInfo.html("");
                            }
                            $("#message").trigger("click");
                            buildTemplate();
                            previewPic();
                        }
                    }
                } else {
                    dialogNew.alert({type: "confirm", message: data.returnMessage, falseShow: false});
                }
            }).fail(function (data, state) {
                dialogNew.alert({type: "confirm", message: data.returnMessage, falseShow: false});
            })
        };

        var doXjhbuss = function () {
            //判断是否为新交互系统
            var sysTypeId = localStorage.getItem("ngkm_sysTypeId");
            if (sysTypeId == Constants.XJH_SERVICE_TYPEID) {
                $("#oneKeyCopyButton").removeClass("hide");
                $("#oneKeyCopyButton").click(function () {
                    var messageInfoNode = $('#messageInfo');
                    var htmls = messageInfoNode.html();
                    $("body").append('<textarea  rows="9" cols="20" id="copytext1" style="position:fixed;top:-1000px"></textarea>');
                    htmls = htmls.replaceAll('<br>', "\n");
                    htmls = htmls.replaceAll('<BR>', "\n");
                    var copytext1 = $("#copytext1");
                    copytext1.val(htmls);
                    copytext1.select();
                    var isSucc = document.execCommand('Copy');
                    if (isSucc) {
                        //new Dialog({mode: 'tips', tipsType: 'success', content: '复制成功'});
                        dialogNew.alert({type:'success',message: '复制成功'});

                    } else {
                        //new Dialog({mode: 'tips', tipsType: 'error', content: '复制失败'});
                        dialogNew.alert({type:'error',message: '复制失败'});

                    }
                    setTimeout(function () {
                        copytext1.remove();
                    }, 1000);
                });
            }
        };

        var sortAndAddTmplt = function (smsTmplts) {
            var maxLevel;
            var onlyTmplt;

            for (var j = 0; j < smsTmplts.length; j++) {
                if (maxLevel == undefined || parseInt(maxLevel) > parseInt(smsTmplts[j].tmpltLevel)) {
                    maxLevel = smsTmplts[j].tmpltLevel;
                    onlyTmplt = smsTmplts[j];
                }
            }

            var normalTmplt = $("#messageTemplate option:first").val();
            var holidayTmplt = $("#messageTemplate option:eq(1)").val();
            if (onlyTmplt) {
                normalTmplt = normalTmplt.replace("{3}", "<br> " + onlyTmplt.tmpltCntt);
                holidayTmplt = holidayTmplt.replace("{3}", "<br> " + onlyTmplt.tmpltCntt);
            } else {
                normalTmplt = normalTmplt.replace("{3}", "<br>");
                holidayTmplt = holidayTmplt.replace("{3}", "<br>");
            }
            $("#messageTemplate option:first").val(normalTmplt);
            $("#messageTemplate option:eq(1)").val(holidayTmplt);
        };

        var tmpltFaildChange = function () {
            var normalTmplt = $("#messageTemplate option:first").val();
            var holidayTmplt = $("#messageTemplate option:eq(1)").val();
            normalTmplt = normalTmplt.replace("{3}", "<br>");
            holidayTmplt = holidayTmplt.replace("{3}", "<br>");
            $("#messageTemplate option:first").val(normalTmplt);
            $("#messageTemplate option:eq(1)").val(holidayTmplt);
        };

        var excpChangeSelect = function (userProvCode) {
            //下拉框的配置
            var selectConfig = {
                el: "#smsRegion",
                topOption: "请选择",
                value: "",
                textField: "regionName",
                valueField: "regionId",
                datas: regionMap
            };
            //初始化下拉框
            if (!regionSelect || once) {
                regionSelect = new select(selectConfig);
                regionSelect.on('change', regionChange);
            } else {
                regionSelect.reload(regionMap);
            }

            var flag = false;
            var excpRegnList = [];
            for (var i = 0; i < regionMap.length; i++) {
                excpRegnList.push(regionMap[i].regionId);
                if (regionMap[i].regionId == userProvCode) {
                    regionSelect.setValue(['regionId', regionMap[i].regionId]);
                    flag = true;
                    break;
                }
            }
            if (!flag) {
                //判断当前坐席切换省份是否在选择范围内
                if(userProvInfo && indexOf(excpRegnList, userProvInfo.suprRegnId) != -1){
                    regionSelect.setValue(userProvInfo.suprRegnId);
                }else{
                    regionSelect.setValue(1);
                }
            }

            $("#smsRegion .active-result:first").hide();
            $("#smsRegion").css("width", 100);

            if (isHall && once) {
                //知识下拉框配置
                var changeLi = "";
                for (var i = 0;i<knwlgMap.length;i++){

                    changeLi += ' <li class="'+ (i == 0 ? "chked" : "") +'" title="'+knwlgMap[i].knwlgName+'" id="'+knwlgMap[i].knwlgId+'"><span class="nameSpan">'+knwlgMap[i].knwlgName+'</span><i class="icon km-guanbi i-curr-bg deleteTitle"></i></li>';
                }
                var newchangHtml = '<span class="spanHt">已选('+knwlgMap.length+'):</span><div class="km-title-newchange-inner">' +
                    '<ul class="km-title-newchange-con">'+changeLi+'</ul></div>';
                knowledge_Id = knwlgMap[0].knwlgId;
                $(".km-title-newchange").append(newchangHtml);
                $(".nameSpan").unbind().click(function (e) {
                    if ($(this).parent().hasClass("chked") && !isDom){
                        return true;
                    } else{
                        knowledge_Id = $(this).parent().attr("id");
                        if (num == 0) {
                            $(this).parent().addClass("chked").siblings().removeClass("chked");
                        }
                        knowledgeChange(e,knowledge_Id);
                    }
                });
                var knowledgeIdx;

                $(".deleteTitle").unbind().click(function (e) {
                    $("#hallDelete").removeClass("hide");
                    knowledgeIdx = $(this).parent().attr("id");
                });
                $("#hallFalse").unbind().click(function () {
                    $("#hallDelete").addClass("hide");
                });
                $("#hallTrue").unbind().click(function () {
                    $("#hallDelete").addClass("hide");
                    var newchangeLi = $(".km-title-newchange-inner").find("li[id="+knowledgeIdx+"]");
                    var index = newchangeLi.index();
                    gisParam.splice(index,1);
                    if (newchangeLi.hasClass("chked")) {
                        $("#attrDiv").empty();
                        if (newchangeLi.next().length == 0){
                            $(".km-title-newchange-inner").find("li:first").find(".nameSpan").click();
                        }else{
                            newchangeLi.next().find(".nameSpan").click();

                        }

                    }
                    newchangeLi.remove();
                    delete msgCntt[knowledgeIdx];
                    $("#messageInfo").find("li[klgId="+knowledgeIdx+"]").remove();
                    $("#showResult").find("input[kid="+knowledgeIdx+"]")[0].checked = false;
                    $("#chkAll")[0].checked = false;
                    var num = $("#chkAll").parent().find('em').text()-1;
                    $("#chkAll").parent().find('em').text(num);
                    if (num < 0){
                        num = 0;
                    }
                    $(".spanHt").html("已选("+num+"):");
                    // 删除短信后，更新短信条数
                    $("#message").html("短信预览("+num+")");
                    if (num >1){
                        $("#sendMsgButton").html('<i class="icon km-fasong"></i> 发送短信('+num+')');
                    }else {
                        $("#sendMsgButton").html('<i class="icon km-fasong"></i> 发送短信');
                    }
                    /*new Dialog({
                        mode: 'tips',
                        delayRmove:2.0,
                        tipsType:'success',
                        content: "删除成功"
                    });*/
                    dialogNew.alert({type:'success',message: '删除成功'});
                });
                nameSpan = $(".nameSpan").length;
                once = false;
                if (knwlgMap.length >1){
                    $("#sendMsgButton").html('<i class="icon km-fasong"></i> 发送短信('+knwlgMap.length+')');
                }else{
                    $("#sendMsgButton").html('<i class="icon km-fasong"></i> 发送短信');
                }
            }
        };

        var doOnCallnumAssignChange = function () {
            if (window.addEventListener) {//IE8+
                var currCallNum = localStorage.getItem("ngkm_call") || "0_0";
                window.addEventListener("storage", function (e) {
                    var targetCallNum = localStorage.getItem("ngkm_call") || "0_0";
                    if(currCallNum != targetCallNum){
                        if (KmUtil.getFocusFalg()){
                            getAcceptNumber();
                        }
                        currCallNum = targetCallNum;
                    }
                    /*if (e.key == "ngkm_call") {
                        if (KmUtil.getFocusFalg()){
                            getAcceptNumber();
                        }
                    }*/
                });
            } else {//IE8
                var currCallNum = localStorage.getItem("ngkm_call") || "0_0";
                $(document).on("storage",function () {
                    var targetCallNum = localStorage.getItem("ngkm_call") || "0_0";
                    if(currCallNum != targetCallNum){
                        if (KmUtil.getFocusFalg()){
                            getAcceptNumber();
                        }
                        currCallNum = targetCallNum;
                    }
                });
            }
        };

        //注册来电号监听事件
        var initAcceptNumberChangeEvent = function () {
            CrossAPI.getContact("cross_data",Constants.PARAMJSONINDEX,function (info) {
                if(window.addEventListener){//IE8+
                    var currCallNum = localStorage.getItem("ngkm_call") || "0_0";
                    window.addEventListener("storage",function (e) {
                        var targetCallNum = localStorage.getItem("ngkm_call") || "0_0";
                        if (currCallNum != targetCallNum) {
                            var newPhoneNum = targetCallNum.split("_")[1];
                            if (KmUtil.getFocusFalg()) {
                                $("#telephone").val(newPhoneNum);
                                getPhoneArea(false);
                            }
                            currCallNum = targetCallNum
                        }
                        /*if(e.key == "ngkm_call"){
                            // getClientInfo();
                            var result = localStorage.getItem("ngkm_call")||"0_0";
                            var newPhoneNum = result.split("_")[1];
                            if (KmUtil.getFocusFalg()) {
                                $("#telephone").val(newPhoneNum);
                                getPhoneArea(false);
                            }
                        }*/
                    });
                }else{//IE8
                    var currCallNum = localStorage.getItem("ngkm_call") || "0_0";
                    $(document).on("storage",function () {
                        var targetCallNum = localStorage.getItem("ngkm_call") || "0_0";
                        if(currCallNum != targetCallNum){
                            var newValInfoArr = targetCallNum.split("_");
                            if (KmUtil.getFocusFalg()){
                                $("#telephone").val(newValInfoArr[1]);
                                getPhoneArea(false);
                            }
                            currCallNum = targetCallNum;
                        }
                    });
                }
            });
        };
        if (KmUtil.getUrlParamter("openMode")) {
            var openMode =  KmUtil.getUrlParamter("openMode");
            KmUtil.setOpenMode(openMode);
        }
        //主入口
        if ("2" == openMode) {//新窗口
            initAcceptNumberChangeEvent();
            // <editor-fold desc="神策埋点开关控制">
            if(KmUtil.getOriginType("http://") || KmUtil.getOriginType("https://")){
                Util.ajax.getJson(Constants.AJAXURL + "/sensorsdata/getSensorsdata?t=" + + new Date().getTime(),{},function (data) {
                    if(data.returnCode == 0 && data.object == "true"){
                        sensorsDataInit();
                    }
                });
            }
            // </editor-fold>
        } else {
            var sysTypeId = localStorage.getItem("ngkm_sysTypeId");
            if (sysTypeId != "xjhytck") {
                doOnCallnumAssignChange();
            }
            // <editor-fold desc="神策埋点开关控制">
            if(KmUtil.getOriginType("http://") || KmUtil.getOriginType("https://")){
                Util.ajax.getJson(Constants.AJAXURL + "/sensorsdata/getSensorsdata?t=" + + new Date().getTime(),{},function (data) {
                    if(data.returnCode == 0 && data.object == "true"){
                        sensorsDataInit();
                    }
                });
            }
            // </editor-fold>
        }

        function freeMemory() {
            klg_Id = null;
            klg_Nm = null;
            ver_no = null;
            glbRegionId = null;
            klg_group = null;
            regionMap = null;
            knwlgMap = null;
            isHall = null;
            regionSelect = null;
            defaultModel = null;
            hasDefault = null;
            isChange = null;
            closeCallBack = null;
            knlgCntt = null;
            once = null;
            isKnlgChange = null;
            klgIdArr = null;
            klgNmArr = null;
            msgCnttArr = null;
            msgCntt = null;
            knwlgIdArray = null;
            klgNmArray = null;
            ifDefault = null;
            dialog = null;
            atomIds = null;
            isDisplay = null;
            atomIdArray = null;
            smsTitleArray = null;
            msgIdArray = null;
            relateIds = null;
            checkTab = null;
            smsIdNow = null;
            rootURL = null;
            klgIndex = null;
            serialNum = null;
            phoneNumber = null;
            selectAtomIds = null;
            userProvInfo = null;
            templtId = null;
            modeCheck = null;
            customModel = null;
            contactId = null;
            openMode = null;
            point = null;
            gisParam=null;
            navUrl=null;
            dialogContent = null;
            smsSuffixState = null;
            detailFlag = null;
            tmpltId = null;
            isNetwork = null;
            bizSerialNo = null;
            knowledge_Id = null;
            sensorMsgClickTimeStart = null;
            sensorSendMsgPage = null;
            num = null;
            nameSpan = null;
            isDom = null;
            isInit = null;
            //filterList = null;
            filterSmsContent = null;
            buildShortUrl = null;
            batchGISParm = null;
            indexOf = null;
            setPoint = null;
            resetGisParam = null;
            getClentPhoneInfo = null;
            buildTemplate = null;
            refresh = null;
            mailNumChange = null;
            changeMessageIcon = null;
            changeDisplayIcon = null;
            addItem = null;
            changeAllItems = null;
            detailNewBusiness = null;
            selectAttr = null;
            checkLastCntt = null;
            getMessageLink = null;
            routeLink = null;
            sendMsgAgain = null;
            trim = null;
            confirmConfig = null;
            getPhoneArea = null;
            getAcceptNumber = null;
            sendFunc = null;
            sendAuthForDetail = null;
            sendForHallFun = null;
            eventInitAttr = null;
            getKnowledgeInfo = null;
            unrich = null;
            iterateAtrrItems = null;
            regionChange = null;
            knowledgeChange = null;
            getExceptValue = null;
            compileTpl = null;
            isArray = null;
            messageSend = null;
            previewPic = null;
            finalClear = null;
            messThumbnailEvent = null;
            previewFun = null;
            checkboxFun = null;
            singlePreview = null;
            doXjhbuss = null;
            sortAndAddTmplt = null;
            tmpltFaildChange = null;
            excpChangeSelect = null;
            doOnCallnumAssignChange = null;
            initAcceptNumberChangeEvent = null;
            filterSmsContents = null;
        }

        return {
            buildShortUrl:buildShortUrl,
            batchGISParm:batchGISParm,
            messageSend: messageSend,
            refresh: refresh,
            changeAllItems: changeAllItems,
            setPoint:setPoint,
            resetGisParam:resetGisParam,
            detailNewBusiness: detailNewBusiness,
            detailMsgButtonClickTime: detailMsgButtonClickTime,
            freeMemory:freeMemory,
            getPhoneArea:getPhoneArea,
            getAcceptNumber:getAcceptNumber
        };
    }
);
